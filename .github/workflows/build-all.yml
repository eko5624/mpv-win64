name: Build All-in-One-MPV
defaults:
  run:
    shell: D:\msys64\msys2.cmd {0}
on:
  workflow_dispatch:
    inputs:
      compiler:
        description: "Compiler"
        required: false
        default: "gcc"
        type: choice
        options:
        - gcc
        - clang
  #schedule:
  #- cron: '30 0 * * MON'
    
jobs:
  amf:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd amf-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh amf-headers-dev amf-dev

  angle:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd angle-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh angle-headers-dev angle-dev

  aom:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        cd aom-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh aom-dev aom-dev

  avisynth:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd avisynth-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh avisynth-dev avisynth-dev

  bzip2:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd bzip2-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh bzip2-dev bzip2-dev

  config:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd mpv-config; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-latest.sh config mpv-config

  ffmpeg:
    needs: [amf, aom, avisynth, bzip2, dav1d, davs2, ffnvcodec, lame, libaribcaption, libbs2b, libjxl, libvpl, libmodplug, libmysofa, libogg, libopenmpt, libplacebo, libsdl2, libsoxr, libspeex, libsrt, libssh, libva, libvorbis_aotuv, libvpx, libwebp, libxml2, libxvid, libzimg, libzvbi, openssl, opus, rav1e, svtav1, uavs3d, vapoursynth, xz, zlib, zstd]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/amf-headers-dev-1.4.33-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/aom-dev-3.9.1_rc1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/avisynth-dev-3.7.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/bzip2-dev-1.0.8-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/dav1d-dev-1.4.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/davs2-dev-1.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffnvcodec-dev-12.2.72.0-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2_13_2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lame-dev-3.100-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lcms2-dev-2.16-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libaribcaption-dev-1.1.1-1-x86_64.pkg.tar.zst                
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libbs2b-dev-3.1.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdovi-dev-3.3.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libiconv-dev-1.17-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjpeg-dev-3.0.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjxl-dev-0.10.2-1-x86_64.pkg.tar.zst                
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libmodplug-dev-0.8.9.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libmysofa-dev-1.3.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libopenmpt-dev-0.7.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libplacebo-dev-6.338.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.43-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsdl2-dev-2.30.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsoxr-dev-0.1.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libspeex-dev-1.2.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsrt-dev-1.5.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libssh-dev-0.10.6-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libva-dev-2.21.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvorbis_aotuv-dev-1.3.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvpl-dev-2023.4.0-1-x86_64.pkg.tar.zst         
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvpx-dev-1.14.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libwebp-dev-1.4.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libxml2-dev-2.12.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libxvid-dev-1.3.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libzimg-dev-3.0.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libzvbi-dev-0.2.42-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/openssl-dev-3.3.0-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/opus-dev-1.5.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/rav1e-dev-0.7.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/shaderc-dev-2024.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/spirv-cross-dev-1.3.261.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/svtav1-dev-2.1.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/uavs3d-dev-1.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vapoursynth-dev-68-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vulkan-dev-1.3.283.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/xxhash-dev-0.8.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/xz-dev-5.6.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.6-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zstd-dev-1.5.5-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd ffmpeg; makepkg-$COMPILER -sLf
    - name: Collecting logs
      if: always()
      run: |
        mkdir ffmpeg_logs
        cp -fr $(find ffmpeg -type f -name "*.log") ffmpeg_logs || true
        7z a logs.7z ffmpeg_logs
    - name: Uploading logs
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: ffmpeg-logs
        path: logs.7z
    - name: Release
      shell: bash
      run: |
        ./release-latest.sh ffmpeg-git ffmpeg
        ./release-dev.sh ffmpeg ffmpeg

  dav1d:
    needs: [xxhash]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Setup Python
      uses: actions/setup-python@main
      with:
        python-version: '3.12'        
    - name: Install python dependencies
      shell: pwsh
      run: pip install meson ninja  
    - name: Build
      run: |
        export pypath=$(cygpath -u $pythonLocation)
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/xxhash-dev-0.8.2-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd dav1d-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh dav1d-dev dav1d-dev

  davs2:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        cd davs2-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh davs2-dev davs2-dev

  expat:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd expat-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh expat-dev expat-dev

  ffnvcodec:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd ffnvcodec-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh ffnvcodec-dev ffnvcodec-dev

  freetype2:
    needs: [libpng, zlib]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Setup Python
      uses: actions/setup-python@main
      with:
        python-version: '3.12'
    - name: Install python dependencies
      shell: pwsh
      run: pip install meson ninja
    - name: Build
      run: |
        export pypath=$(cygpath -u $pythonLocation)
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.43-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.6-1-x86_64.pkg.tar.zst      
        pacman -U *.zst --noconfirm        
        cd freetype2-dev; makepkg-$COMPILER -sLf -p PKGBUILD-new
    - name: Release
      shell: bash
      run: ./release-dev.sh freetype2-dev freetype2-dev

  fribidi:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Setup Python
      uses: actions/setup-python@main
      with:
        python-version: '3.12'
    - name: Install python dependencies
      shell: pwsh
      run: pip install meson ninja     
    - name: Build
      run: |
        export pypath=$(cygpath -u $pythonLocation)
        cd fribidi-dev; makepkg-$COMPILER -sLf -p PKGBUILD-new
    - name: Release
      shell: bash
      run: ./release-dev.sh fribidi-dev fribidi-dev       

  harfbuzz:
    needs: [freetype2, libpng]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Setup Python
      uses: actions/setup-python@main
      with:
        python-version: '3.12'
    - name: Install python dependencies
      shell: pwsh
      run: pip install meson ninja
    - name: Build
      run: |
        export pypath=$(cygpath -u $pythonLocation)
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2_13_2-1-x86_64.pkg.tar.zst 
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.43-1-x86_64.pkg.tar.zst     
        pacman -U *.zst --noconfirm         
        cd harfbuzz-dev; makepkg-$COMPILER -sLf -p PKGBUILD-new
    - name: Release
      shell: bash
      run: ./release-dev.sh harfbuzz-dev harfbuzz-dev

  lame:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        cd lame-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh lame-dev lame-dev 

  lcms2:
    needs: [libjpeg, zlib]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Setup Python
      uses: actions/setup-python@main
      with:
        python-version: '3.12'
    - name: Install python dependencies
      shell: pwsh
      run: pip install meson ninja
    - name: Build
      run: |
        export pypath=$(cygpath -u $pythonLocation)
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjpeg-dev-3.0.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.6-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd lcms2-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh lcms2-dev lcms2-dev 

  libarchive:
    needs: [bzip2, expat, libxml2, lzo, openssl, xz, zlib, zstd]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/bzip2-dev-1.0.8-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/expat-dev-2.6.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libiconv-dev-1.17-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libxml2-dev-2.12.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lzo-dev-2.10-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/openssl-dev-3.3.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/xz-dev-5.6.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.6-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zstd-dev-1.5.5-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libarchive-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libarchive-dev libarchive-dev 

  libaribcaption:
    needs: [freetype2, openssl]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2_13_2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.43-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/openssl-dev-3.3.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.6-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zstd-dev-1.5.5-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libaribcaption-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libaribcaption-dev libaribcaption-dev 

  libass:
    needs: [freetype2, fribidi, harfbuzz, libunibreak]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2_13_2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/fribidi-dev-1.0.14-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/harfbuzz-dev-8.5.0-1-x86_64.pkg.tar.zst 
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.43-1-x86_64.pkg.tar.zst       
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libunibreak-dev-6_1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.6-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm 
        cd libass-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libass-dev libass-dev      

  libbluray:
    needs: [freetype2, libpng, libudfread, zlib]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2_13_2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.43-1-x86_64.pkg.tar.zst         
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libudfread-dev-1.1.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.6-1-x86_64.pkg.tar.zst        
        pacman -U *.zst --noconfirm
        cd libbluray-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libbluray-dev libbluray-dev

  libbs2b:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd libbs2b-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libbs2b-dev libbs2b-dev

  libcaca:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd libcaca-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libcaca-dev libcaca-dev

  libdovi:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Install rust
      shell: bash
      run: |
        rustup self uninstall -y
        export RUSTUP_HOME="/d/.rustup"
        export CARGO_HOME="/d/.cargo"
        curl -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain stable --target x86_64-pc-windows-gnu --no-modify-path
        $CARGO_HOME/bin/rustup default stable-x86_64-pc-windows-gnu
    - name: Install cargo-c
      run: |
        curl -OL https://github.com/lu-zero/cargo-c/releases/latest/download/cargo-c-windows-gnu.zip
        7z x cargo-c-windows-gnu.zip -o/d/.rustup/toolchains/stable-x86_64-pc-windows-gnu/bin
    - name: Build
      run: |
        if [[ $COMPILER == clang ]]; then 
          pacman -Sy mingw-w64-x86_64-gcc --noconfirm
          cp /mingw64/lib/gcc/x86_64-w64-mingw32/**/libgcc.a /d/ucrt64/lib
          cp /mingw64/lib/gcc/x86_64-w64-mingw32/**/libgcc_eh.a /d/ucrt64/lib
        fi
        cd libdovi-dev; makepkg-$COMPILER -sLf
      
    - name: Release
      shell: bash
      run: ./release-dev.sh libdovi-dev libdovi-dev                     

  libdvdcss:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd libdvdcss-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libdvdcss-dev libdvdcss-dev

  libdvdnav:
    needs: [libdvdread]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdcss-dev-1.4.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdread-dev-6.1.3-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libdvdnav-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libdvdnav-dev libdvdnav-dev

  libdvdread:
    needs: [libdvdcss]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdcss-dev-1.4.3-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libdvdread-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libdvdread-dev libdvdread-dev         

  libiconv:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd libiconv-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libiconv-dev libiconv-dev

  libjpeg:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd libjpeg-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libjpeg-dev libjpeg-dev
        
  libjxl:
    needs: [lcms2, libjpeg, libpng, zlib]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lcms2-dev-2.16-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjpeg-dev-3.0.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.43-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.6-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm        
        cd libjxl-dev; makepkg-$COMPILER -sLf -p PKGBUILD-new 
    - name: Release
      shell: bash
      run: ./release-dev.sh libjxl-dev libjxl-dev         

  libmodplug:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd libmodplug-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libmodplug-dev libmodplug-dev 

  libmysofa:
    needs: [zlib]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps: 
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.6-1-x86_64.pkg.tar.zst      
        pacman -U *.zst --noconfirm                   
        cd libmysofa-dev; makepkg-$COMPILER -sLf  
    - name: Release
      shell: bash
      run: ./release-dev.sh libmysofa-dev libmysofa-dev                           

  libogg:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd libogg-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libogg-dev libogg-dev 
        
  libopenmpt:
    needs: [zlib, libogg, libsdl2, libvorbis_aotuv]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.6-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsdl2-dev-2.30.3-1-x86_64.pkg.tar.zst 
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvorbis_aotuv-dev-1.3.7-1-x86_64.pkg.tar.zst      
        pacman -U *.zst --noconfirm         
        cd libopenmpt-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libopenmpt-dev libopenmpt-dev                

  libplacebo:
    needs: [libdovi, lcms2, vulkan, shaderc, spirv-cross, xxhash]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Setup Python
      uses: actions/setup-python@main
      with:
        python-version: '3.12'
    - name: Install python dependencies
      shell: pwsh
      run: pip install ninja Jinja2 meson
    - name: Build
      run: |
        export pypath=$(cygpath -u $pythonLocation)   
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lcms2-dev-2.16-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdovi-dev-3.3.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjpeg-dev-3.0.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/shaderc-dev-2024.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/spirv-cross-dev-1.3.261.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vulkan-dev-1.3.283.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/xxhash-dev-0.8.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.6-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm 
        cd libplacebo-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libplacebo-dev libplacebo-dev
        
  libpng:
    needs: [zlib]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.6-1-x86_64.pkg.tar.zst     
        pacman -U *.zst --noconfirm         
        cd libpng-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libpng-dev libpng-dev      

  libsamplerate:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd libsamplerate-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libsamplerate-dev libsamplerate-dev

  libsdl2:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd libsdl2-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libsdl2-dev libsdl2-dev 

  libsixel:
    needs: [libjpeg, libpng]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Setup Python
      uses: actions/setup-python@main
      with:
        python-version: '3.12'
    - name: Install python dependencies
      shell: pwsh
      run: pip install meson ninja                
    - name: Build
      run: |
        export pypath=$(cygpath -u $pythonLocation)
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjpeg-dev-3.0.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.43-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.6-1-x86_64.pkg.tar.zst 
        pacman -U *.zst --noconfirm        
        cd libsixel; makepkg-$COMPILER -sLf -p PKGBUILD-new
    - name: Release
      shell: bash
      run: ./release-dev.sh libsixel-dev libsixel 

  libsoxr:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd libsoxr-dev; makepkg-$COMPILER -sLf  
    - name: Release
      shell: bash
      run: ./release-dev.sh libsoxr-dev libsoxr-dev                   

  libspeex:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd libspeex-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libspeex-dev libspeex-dev 

  libsrt:
    needs: [openssl]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/openssl-dev-3.3.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zstd-dev-1.5.5-1-x86_64.pkg.tar.zst     
        pacman -U *.zst --noconfirm
        cd libsrt-dev; makepkg-$COMPILER -sLf  
    - name: Release
      shell: bash
      run: ./release-dev.sh libsrt-dev libsrt-dev 

  libssh:
    needs: [openssl, zlib]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/openssl-dev-3.3.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.6-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zstd-dev-1.5.5-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm                   
        cd libssh-dev; makepkg-$COMPILER -sLf  
    - name: Release
      shell: bash
      run: ./release-dev.sh libssh-dev libssh-dev 

  libudfread:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd libudfread-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libudfread-dev libudfread-dev

  libunibreak:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd libunibreak-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libunibreak-dev libunibreak-dev                             

  libva:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Setup Python
      uses: actions/setup-python@main
      with:
        python-version: '3.12'
    - name: Install python dependencies
      shell: pwsh
      run: pip install ninja meson
    - name: Build
      run: |
        export pypath=$(cygpath -u $pythonLocation)      
        cd libva-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libva-dev libva-dev

  libvorbis_aotuv:
    needs: [libogg]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libvorbis_aotuv-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libvorbis_aotuv-dev libvorbis_aotuv-dev

  libvpl:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd libvpl-dev; makepkg-$COMPILER -sLf  
    - name: Release
      shell: bash
      run: ./release-dev.sh libvpl-dev libvpl-dev         

  libvpx:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        cd libvpx-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libvpx-dev libvpx-dev

  libwebp:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd libwebp-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libwebp-dev libwebp-dev

  libxml2:
    needs: [libiconv, xz, zlib]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libiconv-dev-1.17-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/xz-dev-5.6.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.6-1-x86_64.pkg.tar.zst        
        pacman -U *.zst --noconfirm
        cd libxml2-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libxml2-dev libxml2-dev        
        
  libxvid:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.6-1-x86_64.pkg.tar.zst
        cd libxvid-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libxvid-dev libxvid-dev
        
  libzimg:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd libzimg-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libzimg-dev libzimg-dev  

  libzvbi:
    needs: [libpng]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libiconv-dev-1.17-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.43-1-x86_64.pkg.tar.zst        
        pacman -Sy gettext-devel --noconfirm
        pacman -U *.zst --noconfirm
        cd libzvbi-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh libzvbi-dev libzvbi-dev

  luajit2:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd luajit2; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh luajit2-dev luajit2              

  lzo:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd lzo-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh lzo-dev lzo-dev

  mpv:
    needs: [libarchive, libcaca, libjpeg, libpng, libsdl2, libsixel, openal-soft, ffmpeg, luajit2, libass, lcms2, libbluray, libudfread, libdvdnav, libplacebo, angle, mujs, rubberband, spirv-cross, vulkan]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Setup Python
      uses: actions/setup-python@main
      with:
        python-version: '3.12'
    - name: Install python dependencies
      shell: pwsh
      run: pip install meson ninja 
    - name: Build
      run: |
        export pypath=$(cygpath -u $pythonLocation)
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/amf-headers-dev-1.4.33-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/angle-headers-dev-1.0.772-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/aom-dev-3.9.1_rc1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/avisynth-dev-3.7.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/bzip2-dev-1.0.8-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/dav1d-dev-1.4.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/davs2-dev-1.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/expat-dev-2.6.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffmpeg-dev-7.0.1-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffnvcodec-dev-12.2.72.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2_13_2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/fribidi-dev-1.0.14-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/harfbuzz-dev-8.5.0-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lame-dev-3.100-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lcms2-dev-2.16-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libarchive-dev-3.7.4-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libaribcaption-dev-1.1.1-1-x86_64.pkg.tar.zst       
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libass-dev-0.17.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libbluray-dev-1.3.4-1-x86_64.pkg.tar.zst                        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libbs2b-dev-3.1.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libcaca-dev-0.99.beta20-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdovi-dev-3.3.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdcss-dev-1.4.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdnav-dev-6.1.1-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdread-dev-6.1.3-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libiconv-dev-1.17-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjpeg-dev-3.0.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjxl-dev-0.10.2-1-x86_64.pkg.tar.zst                
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libmodplug-dev-0.8.9.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libmysofa-dev-1.3.2-1-x86_64.pkg.tar.zst               
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libopenmpt-dev-0.7.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libplacebo-dev-6.338.2-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.43-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsamplerate-dev-0.2.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsdl2-dev-2.30.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsixel-dev-1.10.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsoxr-dev-0.1.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libspeex-dev-1.2.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsrt-dev-1.5.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libssh-dev-0.10.6-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libudfread-dev-1.1.2-1-x86_64.pkg.tar.zst         
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libunibreak-dev-6_1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libva-dev-2.21.0-1-x86_64.pkg.tar.zst             
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvorbis_aotuv-dev-1.3.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvpl-dev-2023.4.0-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvpx-dev-1.14.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libwebp-dev-1.4.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libxml2-dev-2.12.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libxvid-dev-1.3.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libzimg-dev-3.0.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libzvbi-dev-0.2.42-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/luajit2-dev-2.1_20240314-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lzo-dev-2.10-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/mujs-dev-1.3.4-1-x86_64.pkg.tar.zst                
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/openal-soft-dev-1.23.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/openssl-dev-3.3.0-1-x86_64.pkg.tar.zst     
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/opus-dev-1.5.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/rav1e-dev-0.7.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/rubberband-dev-3.3.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/shaderc-dev-2024.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/spirv-cross-dev-1.3.261.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/svtav1-dev-2.1.0-1-x86_64.pkg.tar.zst                
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/uavs3d-dev-1.1-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vapoursynth-dev-68-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vulkan-dev-1.3.283.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/xxhash-dev-0.8.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/xz-dev-5.6.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.6-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zstd-dev-1.5.5-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd mpv; makepkg-$COMPILER -sLf
    - name: Release mpv and libmpv
      shell: bash
      run: ./release-latest.sh mpv mpv

  mujs:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd mujs; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh mujs-dev mujs

  openal-soft:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd openal-soft-dev; makepkg-$COMPILER -sLf  
    - name: Release
      shell: bash
      run: ./release-dev.sh openal-soft-dev openal-soft-dev              

  openssl:
    needs: [zlib, zstd]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.6-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zstd-dev-1.5.5-1-x86_64.pkg.tar.zst       
        pacman -U *.zst --noconfirm
        cd openssl-dev; makepkg-$COMPILER -sLf  
    - name: Release
      shell: bash
      run: ./release-dev.sh openssl-dev openssl-dev 

  opus:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd opus-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh opus-dev opus-dev

  package:
    needs: [mpv, config]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Setup Packages
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/config-1.0-1-x86_64.pkg.tar.xz        
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/ffmpeg-git-7.0.1-1-x86_64.pkg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/libmpv-git-0.38.0-1-x86_64.pkg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/mpv-git-0.38.0-1-x86_64.pkg.tar.xz
        pacman -U *.xz --noconfirm
    - name: Get ffmpeg latest commit sha
      run: echo "ffmpeg_sha=$(cat /d/msys64/opt/ffmpeg/SHORT_SHA)" >> $GITHUB_ENV   
    - name: Zip Packages    
      run: |
        curl -OL https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe
        mv yt-dlp.exe /opt/mpv
        7z a static-mpv.7z /opt/mpv/*
        7z a git-libmpv.7z /opt/libmpv\*
        7z a git-ffmpeg-${{ env.ffmpeg_sha }}.7z /opt/ffmpeg/*
    - name: Release
      shell: bash
      run: ./release-package.sh

  rav1e:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Install Rust
      shell: bash
      run: |
        rustup self uninstall -y
        export RUSTUP_HOME="/d/.rustup"
        export CARGO_HOME="/d/.cargo"
        curl -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain stable --target x86_64-pc-windows-gnu --no-modify-path
        $CARGO_HOME/bin/rustup default stable-x86_64-pc-windows-gnu        
    - name: Install cargo-c
      run: |
        curl -OL https://github.com/lu-zero/cargo-c/releases/latest/download/cargo-c-windows-gnu.zip
        7z x cargo-c-windows-gnu.zip -o/d/.rustup/toolchains/stable-x86_64-pc-windows-gnu/bin        
    - name: Build
      run: |
        if [[ $COMPILER == clang ]]; then 
          pacman -Sy mingw-w64-x86_64-gcc --noconfirm
          cp /mingw64/lib/gcc/x86_64-w64-mingw32/**/libgcc.a /d/ucrt64/lib
          cp /mingw64/lib/gcc/x86_64-w64-mingw32/**/libgcc_eh.a /d/ucrt64/lib
        fi  
        cd rav1e-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh rav1e-dev rav1e-dev

  rubberband:
    needs: [libsamplerate]
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Setup Python
      uses: actions/setup-python@main
      with:
        python-version: '3.12'
    - name: Install python dependencies
      shell: pwsh
      run: pip install meson ninja        
    - name: Build
      run: |
        export pypath=$(cygpath -u $pythonLocation)
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsamplerate-dev-0.2.2-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd rubberband; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh rubberband-dev rubberband       
  
  shaderc:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd shaderc-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh shaderc-dev shaderc-dev

  spirv-cross:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd spirv-cross-dev; makepkg-$COMPILER -sLf -p PKGBUILD-new
    - name: Release
      shell: bash
      run: ./release-dev.sh spirv-cross-dev spirv-cross-dev

  svtav1:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd svtav1-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh svtav1-dev svtav1-dev

  uavs3d:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd uavs3d-dev; makepkg-$COMPILER -sLf 
    - name: Release
      shell: bash
      run: ./release-dev.sh uavs3d-dev uavs3d-dev        

  vapoursynth:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main     
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd vapoursynth; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh vapoursynth-dev vapoursynth

  vulkan:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd vulkan-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh vulkan-dev vulkan-dev

  xxhash:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd xxhash-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh xxhash-dev xxhash-dev

  xz:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: |
        pacman -Sy gettext-devel --noconfirm
        cd xz-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh xz-dev xz-dev

  zlib:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd zlib-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh zlib-dev zlib-dev

  zstd:
    runs-on: windows-2022
    env:
      COMPILER: ${{ inputs.compiler }}
      GH_TOKEN: ${{ github.token }}
    steps:
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - name: Checkout
      uses: actions/checkout@main
    - name: Cache msys2
      uses: actions/cache@main
      with:
        path: D:\msys64
        key: msys2
    - name: Cache ${{ inputs.compiler }} Toolchain
      uses: actions/cache@main
      with:
        path: D:\ucrt64
        key: ${{ inputs.compiler }}-ucrt-x86_64
    - name: Build
      run: cd zstd-dev; makepkg-$COMPILER -sLf
    - name: Release
      shell: bash
      run: ./release-dev.sh zstd-dev zstd-dev
