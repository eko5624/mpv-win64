name: build-all
defaults:
  run:
    shell: msys2 {0}

on:
  workflow_dispatch:
  #schedule:
  #- cron: '30 0 * * MON'
    
jobs:
  standalone-pkgs:
    strategy:
      matrix:
        pkg-path:
          - amf-dev
          - angle-dev
          - aom-dev
          - avisynth-dev
          - mpv-config
          - davs2-dev
          - ffnvcodec-dev
          - fribidi-dev
          - lame-dev
          - lcms2-dev
          - libbs2b-dev
          - libcaca-dev
          - libdvdcss-dev
          - libiconv-dev
          - libjpeg-dev
          - libmodplug-dev
          - libogg-dev
          - libsdl2-dev
          - libsoxr-dev
          - libspeex-dev
          - libudfread-dev
          - libunibreak-dev
          - libva-dev
          - libvpl-dev
          - libvpx-dev
          - libwebp-dev
          - libzimg-dev
          - luajit2
          - mujs
          - openal-soft-dev
          - opus-dev
          - rubberband
          - shaderc-dev
          - spirv-cross-dev
          - uavs3d-dev
          - vapoursynth
          - vulkan-dev
          - xxhash-dev
          - zlib-dev
        include:
          - { pkg-path: amf-dev, pkg-name: amf-headers-dev }
          - { pkg-path: angle-dev, pkg-name: angle-headers-dev }
          - { pkg-path: fribidi-dev, pkg-name: PKGBUILD-new }
          - { pkg-path: luajit2, pkg-name: luajit2-dev }
          - { pkg-path: rubberband, pkg-name: rubberband-dev }
          - { pkg-path: spirv-cross-dev, pkg-build: PKGBUILD-new }
          - { pkg-path: vapoursynth, pkg-name: vapoursynth-dev }
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git             
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'        
    - name: Install python dependencies
      shell: bash
      run: |
        pip install meson ninja
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Build
      if: ${{ matrix.pkg-build }}
      run: |
        export pypath=$(cygpath -u $pythonLocation)
        cd ${{ matrix.pkg-path }}; makepkg-clang -p ${{ matrix.pkg-build }}
    - name: Build
      if: ${{ !matrix.pkg-build }}
      run: |
        export pypath=$(cygpath -u $pythonLocation)
        cd ${{ matrix.pkg-path }}; makepkg-clang 
    - name: Release
      if: ${{ matrix.pkg-name }}
      env:
        GH_TOKEN: ${{ github.token }}    
      run: |
        ./release-dev.sh ${{ matrix.pkg-name }} ${{ matrix.pkg-path }}
    - name: Release
      if: ${{ !matrix.pkg-name }}
      env:
        GH_TOKEN: ${{ github.token }}    
      run: |
        ./release-dev.sh ${{ matrix.pkg-path }} ${{ matrix.pkg-path }}
  
  ffmpeg:
    needs: [amf, aom, avisynth, dav1d, davs2, ffnvcodec, lame, libaribcaption, libbs2b, libjxl, libvpl, libmodplug, libmysofa, libogg, libopenmpt, libplacebo, libsdl2, libsoxr, libspeex, libsrt, libssh, libva, libvorbis_aotuv, libvpx, libwebp, libxml2, libxvid, libzimg, libzvbi, openssl, opus, rav1e, uavs3d, vapoursynth, zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/amf-headers-dev-1.4.32-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/aom-dev-3.8.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/avisynth-dev-3.7.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/dav1d-dev-1.3.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/davs2-dev-1.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffnvcodec-dev-12.1.14.0-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2_13_2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lame-dev-3.100-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lcms2-dev-2.16-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libaribcaption-dev-1.1.1-1-x86_64.pkg.tar.zst                
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libbs2b-dev-3.1.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdovi-dev-3.2.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libiconv-dev-1.17-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjpeg-dev-3.0.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjxl-dev-0.8.2-1-x86_64.pkg.tar.zst                
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libmodplug-dev-0.8.9.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libmysofa-dev-1.3.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libopenmpt-dev-0.7.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libplacebo-dev-6.338.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.40-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsdl2-dev-2.28.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsoxr-dev-0.1.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libspeex-dev-1.2.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsrt-dev-1.5.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libssh-dev-0.10.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libva-dev-2.20.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvorbis_aotuv-dev-1.3.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvpl-dev-2023.4.0-1-x86_64.pkg.tar.zst         
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvpx-dev-1.12.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libwebp-dev-1.3.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libxml2-dev-2.12.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libxvid-dev-1.3.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libzimg-dev-3.0.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libzvbi-dev-0.2.42-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/openssl-dev-3.2.0-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/opus-dev-1.4-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/rav1e-dev-0.6.6-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/shaderc-dev-2023.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/spirv-cross-dev-1.3.261.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/uavs3d-dev-1.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vapoursynth-dev-65-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vulkan-dev-1.3.268.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/xxhash-dev-0.8.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.5-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd ffmpeg; makepkg-clang
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-latest.sh ffmpeg-git ffmpeg
        ./release-dev.sh ffmpeg-dev ffmpeg

  dav1d:
    needs: [xxhash]
    runs-on: windows-2022
    steps:   
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git    
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'        
    - name: Install python dependencies
      shell: bash
      run: |
        pip install meson ninja
    - name: Build
      run: |
        export pypath=$(cygpath -u $pythonLocation)        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/xxhash-dev-0.8.2-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd dav1d-dev; makepkg-clang
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh dav1d-dev dav1d-dev

  freetype2:
    needs: [libpng, zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git             
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install python dependencies
      shell: bash
      run: |
        pip install meson ninja
    - name: Build
      run: |
        export pypath=$(cygpath -u $pythonLocation)
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.40-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.5-1-x86_64.pkg.tar.zst      
        pacman -U *.zst --noconfirm        
        cd freetype2-dev; makepkg-clang -p PKGBUILD-new
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh freetype2-dev freetype2-dev       

  harfbuzz:
    needs: [freetype2, libpng]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git             
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install python dependencies
      shell: pwsh
      run: |
        pip install meson ninja
    - name: Build
      run: |
        export pypath=$(cygpath -u $pythonLocation)        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2_13_2-1-x86_64.pkg.tar.zst    
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.40-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm         
        cd harfbuzz-dev; makepkg-clang -p PKGBUILD-new
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh harfbuzz-dev harfbuzz-dev

  libass:
    needs: [freetype2, fribidi, harfbuzz, libunibreak]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2_13_2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/fribidi-dev-1.0.13-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/harfbuzz-dev-8.3.0-1-x86_64.pkg.tar.zst 
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.40-1-x86_64.pkg.tar.zst       
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libunibreak-dev-5_1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.5-1-x86_64.pkg.tar.zst       
        pacman -U *.zst --noconfirm 
        cd libass-dev; makepkg-clang
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh libass-dev libass-dev

  libaribcaption:
    needs: [freetype2, openssl]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2_13_2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.40-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/openssl-dev-3.2.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.5-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libaribcaption-dev; makepkg-clang
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}   
      shell: bash 
      run: |
        ./release-dev.sh libaribcaption-dev libaribcaption-dev       

  libbluray:
    needs: [freetype2, libpng, libudfread, zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2_13_2-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.40-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libudfread-dev-1.1.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.5-1-x86_64.pkg.tar.zst        
        pacman -U *.zst --noconfirm
        cd libbluray-dev; makepkg-clang
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh libbluray-dev libbluray-dev

  libdovi:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper git mingw-w64-x86_64-gcc p7zip           
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Install rust
      shell: bash
      run: |
        rustup self uninstall -y
        export RUSTUP_HOME="/d/.rustup"
        export CARGO_HOME="/d/.cargo"
        curl -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain stable --target x86_64-pc-windows-gnu --no-modify-path
        $CARGO_HOME/bin/rustup default stable-x86_64-pc-windows-gnu  
    - name: Install cargo-c
      run: |
        curl -OL https://github.com/lu-zero/cargo-c/releases/latest/download/cargo-c-windows-gnu.zip
        7z x cargo-c-windows-gnu.zip -o/d/.rustup/toolchains/stable-x86_64-pc-windows-gnu/bin       
    - name: Build
      run: |
        cp /mingw64/lib/gcc/x86_64-w64-mingw32/**/libgcc.a /d/clang/lib
        cp /mingw64/lib/gcc/x86_64-w64-mingw32/**/libgcc_eh.a /d/clang/lib
        cd libdovi-dev; makepkg-clang      
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh libdovi-dev libdovi-dev

  libdvdnav:
    needs: [libdvdread]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdcss-dev-1.4.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdread-dev-6.1.3-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libdvdnav-dev; makepkg-clang
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh libdvdnav-dev libdvdnav-dev

  libdvdread:
    needs: [libdvdcss]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdcss-dev-1.4.3-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libdvdread-dev; makepkg-clang
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh libdvdread-dev libdvdread-dev
        
  libjxl:
    needs: [lcms2, libjpeg, libpng, zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git           
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lcms2-dev-2.16-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjpeg-dev-3.0.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.40-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.5-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm        
        cd libjxl-dev; makepkg-clang -p PKGBUILD-new 
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh libjxl-dev libjxl-dev 

  libmysofa:
    needs: [zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.5-1-x86_64.pkg.tar.zst      
        pacman -U *.zst --noconfirm                   
        cd libmysofa-dev; makepkg-clang  
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh libmysofa-dev libmysofa-dev

  libopenmpt:
    needs: [zlib, libogg, libsdl2, libvorbis_aotuv]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsdl2-dev-2.28.5-1-x86_64.pkg.tar.zst 
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvorbis_aotuv-dev-1.3.7-1-x86_64.pkg.tar.zst      
        pacman -U *.zst --noconfirm         
        cd libopenmpt-dev; makepkg-clang
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh libopenmpt-dev libopenmpt-dev                

  libplacebo:
    needs: [libdovi, lcms2, vulkan, shaderc, spirv-cross, xxhash]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git           
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install python dependencies
      shell: pwsh
      run: |
        pip install ninja Jinja2 meson
    - name: Build
      run: |
        export pypath=$(cygpath -u $pythonLocation)              
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lcms2-dev-2.16-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdovi-dev-3.2.0-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vulkan-dev-1.3.268.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/shaderc-dev-2023.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/spirv-cross-dev-1.3.261.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/xxhash-dev-0.8.2-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm 
        cd libplacebo-dev; makepkg-clang
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh libplacebo-dev libplacebo-dev
        
  libpng:
    needs: [zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git     
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.5-1-x86_64.pkg.tar.zst     
        pacman -U *.zst --noconfirm         
        cd libpng-dev; makepkg-clang
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh libpng-dev libpng-dev

  libsixel:
    needs: [libjpeg, libpng]
    runs-on: windows-2022
    steps:    
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git              
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install python dependencies
      shell: pwsh
      run: |
        pip install meson ninja                
    - name: Build
      run: |
        export pypath=$(cygpath -u $pythonLocation)       
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjpeg-dev-3.0.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.40-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.5-1-x86_64.pkg.tar.zst 
        pacman -U *.zst --noconfirm        
        cd libsixel; makepkg-clang -p PKGBUILD-new
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh libsixel-dev libsixel

  libsrt:
    needs: [openssl]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git           
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/openssl-dev-3.2.0-1-x86_64.pkg.tar.zst      
        pacman -U *.zst --noconfirm                
        cd libsrt-dev; makepkg-clang  
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh libsrt-dev libsrt-dev 

  libssh:
    needs: [openssl, zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git           
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/openssl-dev-3.2.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.5-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm                   
        cd libssh-dev; makepkg-clang  
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh libssh-dev libssh-dev

  libvorbis_aotuv:
    needs: [libogg]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libvorbis_aotuv-dev; makepkg-clang
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh libvorbis_aotuv-dev libvorbis_aotuv-dev

  libxml2:
    needs: [libiconv, zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libiconv-dev-1.17-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.5-1-x86_64.pkg.tar.zst        
        pacman -U *.zst --noconfirm
        cd libxml2-dev; makepkg-clang
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh libxml2-dev libxml2-dev        
        
  libxvid:
    needs: [zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git     
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.5-1-x86_64.pkg.tar.zst
        cd libxvid-dev; makepkg-clang
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh libxvid-dev libxvid-dev 

  libzvbi:
    needs: [libpng]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel gettext-devel autoconf-wrapper automake-wrapper libtool git     
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libiconv-dev-1.17-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.40-1-x86_64.pkg.tar.zst        
        pacman -U *.zst --noconfirm
        cd libzvbi-dev; makepkg-clang
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh libzvbi-dev libzvbi-dev

  luajit2:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Build
      run: |
        cd luajit2; makepkg-clang
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh luajit2-dev luajit2              

  mpv:
    needs: [libcaca, libjpeg, libpng, libsdl2, libsixel, openal-soft, ffmpeg, luajit2, libass, lcms2, libbluray, libudfread, libdvdnav, libplacebo, angle, mujs, rubberband, spirv-cross, vulkan]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install python dependencies
      shell: pwsh
      run: |
        pip install meson ninja 
    - name: Build
      run: |
        export pypath=$(cygpath -u $pythonLocation)         
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/amf-headers-dev-1.4.32-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/angle-headers-dev-1.0.772-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/aom-dev-3.8.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/avisynth-dev-3.7.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/dav1d-dev-1.3.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/davs2-dev-1.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffmpeg-dev-6.1-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffnvcodec-dev-12.1.14.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2_13_2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/fribidi-dev-1.0.13-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/harfbuzz-dev-8.3.0-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lame-dev-3.100-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lcms2-dev-2.16-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libaribcaption-dev-1.1.1-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libass-dev-0.17.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libbluray-dev-1.3.4-1-x86_64.pkg.tar.zst                        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libbs2b-dev-3.1.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libcaca-dev-0.99.beta20-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdovi-dev-3.2.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdcss-dev-1.4.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdnav-dev-6.1.1-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdread-dev-6.1.3-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libiconv-dev-1.17-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjpeg-dev-3.0.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjxl-dev-0.8.2-1-x86_64.pkg.tar.zst                
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libmodplug-dev-0.8.9.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libmysofa-dev-1.3.2-1-x86_64.pkg.tar.zst               
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libopenmpt-dev-0.7.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libplacebo-dev-6.338.1-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.40-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsdl2-dev-2.28.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsixel-dev-1.10.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsoxr-dev-0.1.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libspeex-dev-1.2.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsrt-dev-1.5.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libssh-dev-0.10.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libudfread-dev-1.1.2-1-x86_64.pkg.tar.zst         
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libunibreak-dev-5_1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libva-dev-2.20.0-1-x86_64.pkg.tar.zst             
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvorbis_aotuv-dev-1.3.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvpl-dev-2023.4.0-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvpx-dev-1.12.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libwebp-dev-1.3.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libxml2-dev-2.12.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libxvid-dev-1.3.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libzimg-dev-3.0.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libzvbi-dev-0.2.42-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/luajit2-dev-2.1_20231117-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/mujs-dev-1.3.4-1-x86_64.pkg.tar.zst                
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/openal-soft-dev-1.23.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/openssl-dev-3.2.0-1-x86_64.pkg.tar.zst     
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/opus-dev-1.4-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/rav1e-dev-0.6.6-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/rubberband-dev-3.3.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/shaderc-dev-2023.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/spirv-cross-dev-1.3.261.1-1-x86_64.pkg.tar.zst                
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/uavs3d-dev-1.1-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vapoursynth-dev-65-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vulkan-dev-1.3.268.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/xxhash-dev-0.8.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.5-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd mpv; makepkg-clang
    - name: Delete old libmpv
      continue-on-error: true
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-latest.sh libmpv-git
    - name: Release mpv and libmpv
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-latest.sh mpv-git mpv

  openssl:
    needs: [zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Build
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-2.1.5-1-x86_64.pkg.tar.zst       
        pacman -U *.zst --noconfirm
        cd openssl-dev; makepkg-clang  
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh openssl-dev openssl-dev

  package:
    needs: [mpv, config]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel p7zip
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Setup Packages      
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/config-1.0-1-x86_64.pkg.tar.xz        
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/ffmpeg-git-6.1-1-x86_64.pkg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/libmpv-git-0.37.0-1-x86_64.pkg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/mpv-git-0.37.0-1-x86_64.pkg.tar.xz
        pacman -U *.xz --noconfirm
    - name: Get ffmpeg latest commit sha
      run: |
        echo "ffmpeg_sha=$(cat /opt/ffmpeg/SHORT_SHA)" >> $GITHUB_ENV
    - name: Zip Packages    
      run: |
        date=$(date +%Y%m%d)
        curl -OL https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe
        mv yt-dlp.exe /opt/mpv
        7z a static-mpv-$date.7z /opt/mpv/*
        7z a git-libmpv-$date.7z /opt/libmpv/*
        7z a git-ffmpeg-$date-${{ env.ffmpeg_sha }}.7z /opt/ffmpeg/*
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-package.sh

  rav1e:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        cache: false
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-gcc p7zip
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\clang
        key: clang-ucrt-x86_64
    - name: Setting makepkg etc
      run: |
        cp pacman-config/makepkg_clang.conf /etc
        cp pacman-config/makepkg-clang /usr/bin
    - name: Install Rust
      shell: bash
      run: |
        rustup self uninstall -y
        export RUSTUP_HOME="/d/.rustup"
        export CARGO_HOME="/d/.cargo"
        curl -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain stable --target x86_64-pc-windows-gnu --no-modify-path
        $CARGO_HOME/bin/rustup default stable-x86_64-pc-windows-gnu        
    - name: Install cargo-c
      run: |
        curl -OL https://github.com/lu-zero/cargo-c/releases/latest/download/cargo-c-windows-gnu.zip
        7z x cargo-c-windows-gnu.zip -o/d/.rustup/toolchains/stable-x86_64-pc-windows-gnu/bin        
    - name: Build
      run: |
        cp /mingw64/lib/gcc/x86_64-w64-mingw32/**/libgcc.a /d/clang/lib
        cp /mingw64/lib/gcc/x86_64-w64-mingw32/**/libgcc_eh.a /d/clang/lib
        cd rav1e-dev; makepkg-clang  
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        ./release-dev.sh rav1e-dev rav1e-dev