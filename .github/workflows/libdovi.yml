name: libdovi

on:
  workflow_dispatch:
  #schedule:
  #- cron: '30 0 * * MON'
    
jobs:  
  libdovi:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper git            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230203_13.0.1_x64-ucrt
    
    - name: Install Rust
      shell: bash
      run: |
        cd /d/ucrt64
        curl -sSf https://sh.rustup.rs |
        sh -s -- -y --default-toolchain stable --target x86_64-pc-windows-gnu --no-modify-path --profile minimal

    - name: Install cargo-c (Windows)
      run: |
        curl -OL https://github.com/lu-zero/cargo-c/releases/latest/download/cargo-c-windows-gnu.zip
        &'C:\Program Files\7-Zip\7z.exe' x cargo-c-windows-gnu.zip -o'${env:USERPROFILE}\.cargo\bin'

    - name: Get the version
      shell: bash
      run: |
        echo "RELEASE_PKG_VERSION=$(cargo pkgid | cut -d# -f2 | cut -d: -f2)" >> $GITHUB_ENV
        echo "LIBDOVI_PKG_VERSION=$(cargo pkgid --manifest-path dolby_vision/Cargo.toml | cut -d# -f2 | cut -d: -f2)" >> $GITHUB_ENV
        which cargo
      
    - name: Install cargo-c
      run: |
        cargo install cargo-c --profile=release-strip --features=vendored-openssl
        
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |                  
        cd libdovi-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libdovi*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libdovi-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true 
