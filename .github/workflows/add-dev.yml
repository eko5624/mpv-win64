name: add-dev

on:
  workflow_dispatch:
  #schedule:
  #- cron: '30 0 * * MON'
    
jobs:
  libjpeg:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools mingw-w64-x86_64-cmake git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: |
        cd libjpeg-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libjpeg*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libjpeg-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true  

  libmfx:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd libmfx-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libmfx*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libmfx-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true   
        
  libopenmpt:
    needs: [zlib, libogg, libsdl2, libvorbis_aotuv]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.12-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsdl2-dev-2.0.18-1-x86_64.pkg.tar.zst 
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvorbis_aotuv-dev-1.3.7-1-x86_64.pkg.tar.zst      
        pacman -U *.zst --noconfirm         
        cd libopenmpt-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libopenmpt*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libopenmpt-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true              

  libpng:
    needs: [zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.12-1-x86_64.pkg.tar.zst     
        pacman -U *.zst --noconfirm         
        cd libpng-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libpng*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libpng-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libsdl2:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd libsdl2-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libsdl2*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libsdl2-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true     

  libspeex:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd libspeex-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libspeex*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libspeex-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true    
        
  libvpx:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools yasm git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd libvpx-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libvpx*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libvpx-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true   

  libwebp:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd libwebp-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libwebp*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libwebp-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true  
        
  libxvid:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd libxvid-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libxvid*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libxvid-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true   
        
  libzimg:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd libzimg-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libzimg*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libzimg-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true  
        
  zlib:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd zlib-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: zlib*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: zlib-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true                                  

  libogg:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd libogg-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libogg*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libogg-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libvorbis_aotuv:
    needs: [libogg]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libvorbis_aotuv-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libvorbis_aotuv*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libvorbis_aotuv-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true



