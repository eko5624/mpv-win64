name: a-test

on:
  workflow_dispatch:
  #schedule:
  #- cron: '30 0 * * MON'
    
jobs:
  config:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git   
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - name: Build
      run: |
        cd mpv-config; makepkg
    - name: Release 
      run: |
        ./release-latest.sh config mpv-config

  ffmpeg:
    needs: [amf, avisynth, dav1d, davs2, gmp, lame, libbs2b, libjxl, libvpl, libmodplug, libmysofa, libogg, libopenmpt, libsdl2, libsoxr, libspeex, libsrt, libssh, libvorbis_aotuv, libvpx, libwebp, libxml2, libxvid, libzimg, libzvbi, mbedtls, opus, ffnvcodec, uavs3d, vapoursynth, zlib]
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool nasm git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        ./install-dev.sh \
          lame-dev \
          libjxl-dev \
          libvpl-dev \
          amf-headers-dev \
          avisynth-dev \
          dav1d-dev \
          davs2-dev \
          gmp-dev \
          mbedtls-dev \
          libbs2b-dev \
          libmodplug-dev \
          libmysofa-dev \
          libiconv-dev \
          libogg-dev \
          libopenmpt-dev \
          libpng-dev \
          libsdl2-dev \
          libsoxr-dev \
          libspeex-dev \
          libsrt-dev \
          libssh-dev \
          libvorbis_aotuv-dev \
          libvpx-dev \
          libwebp-dev \
          libxml2-dev \
          libxvid-dev \
          libzimg-dev \
          libzvbi-dev \
          opus-dev \
          ffnvcodec-dev \
          uavs3d-dev \
          vapoursynth-dev \
          zlib-dev
        cd ffmpeg; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-latest.sh ffmpeg-git ffmpeg
        ./release-dev.sh ffmpeg-dev ffmpeg

  amf:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git             
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd amf-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg  
    - name: Release 
      run: |
        ./release-dev.sh amf-headers-dev amf-dev

  angle:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git             
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd angle-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg  
    - name: Release 
      run: |
        ./release-dev.sh angle-headers-dev angle-dev

  avisynth:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
      CMAKE: /mingw64/bin/cmake
      MAKE: /mingw64/bin/mingw32-make      
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake mingw-w64-x86_64-make            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd avisynth-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg  
    - name: Release 
      run: |
        ./release-dev.sh avisynth-dev avisynth-dev

  dav1d:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:   
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool nasm git    
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'        
    - name: Install python dependencies
      run: |
        pip install meson ninja  
    - name: Build
      run: |
        pypath=$(cygpath -u $pythonLocation)
        PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin
        cd dav1d-dev; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh dav1d-dev dav1d-dev

  davs2:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git nasm     
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd davs2-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh davs2-dev davs2-dev

  ffnvcodec:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git       
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd ffnvcodec-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh ffnvcodec-dev ffnvcodec-dev

  freetype2:
    needs: [libpng, zlib]
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git             
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install python dependencies
      run: |
        pip install meson ninja
    - name: Build
      run: |
        pypath=$(cygpath -u $pythonLocation)
        PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin
        ./install-dev.sh \
          libpng-dev \
          zlib-dev      
        cd freetype2-dev; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg -p PKGBUILD-new
    - name: Release 
      run: |
        ./release-dev.sh freetype2-dev freetype2-dev

  fribidi:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git              
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install python dependencies
      run: |
        pip install meson ninja     
    - name: Build
      run: |
        pypath=$(cygpath -u $pythonLocation)
        PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin
        cd fribidi-dev; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg -p PKGBUILD-new
    - name: Release 
      run: |
        ./release-dev.sh fribidi-dev fribidi-dev

  gmp:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd gmp-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh gmp-dev gmp-dev       

  harfbuzz:
    needs: [freetype2, libpng]
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git             
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install python dependencies
      run: |
        pip install meson ninja
    - name: Build
      run: |
        ./install-dev.sh \
          freetype2-dev \
          libpng-dev
        pypath=$(cygpath -u $pythonLocation)
        PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin         
        cd harfbuzz-dev; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg -p PKGBUILD-new
    - name: Release 
      run: |
        ./release-dev.sh harfbuzz-dev harfbuzz-dev 

  lame:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool nasm      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd lame-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh lame-dev lame-dev 

  lcms2:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd lcms2-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh lcms2-dev lcms2-dev 

  libass:
    needs: [freetype2, fribidi, harfbuzz, libunibreak]
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool nasm git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        ./install-dev.sh \
          freetype2-dev \
          fribidi-dev \
          harfbuzz-dev \
          libpng-dev \
          libunibreak-dev \
          zlib-dev     
        cd libass-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libass-dev libass-dev

  libbluray:
    needs: [freetype2, libpng, libudfread, zlib]
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        ./install-dev.sh \
          freetype2-dev \
          libpng-dev \
          libudfread-dev \
          zlib-dev
        cd libbluray-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libbluray-dev libbluray-dev

  libbs2b:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd libbs2b-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libbs2b-dev libbs2b-dev

  libcaca:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:   
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git              
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd libcaca-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libcaca-dev libcaca-dev              

  libdvdcss:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd libdvdcss-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libdvdcss-dev libdvdcss-dev

  libdvdnav:
    needs: [libdvdread]
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        ./install-dev.sh libdvdcss-dev libdvdread-dev
        cd libdvdnav-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libdvdnav-dev libdvdnav-dev

  libdvdread:
    needs: [libdvdcss]
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        ./install-dev.sh libdvdcss-dev
        cd libdvdread-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libdvdread-dev libdvdread-dev         

  libjpeg:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      CMAKE: /mingw64/bin/cmake    
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool mingw-w64-x86_64-cmake git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd libjpeg-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libjpeg-dev libjpeg-dev
        
  libjxl:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      CMAKE: /mingw64/bin/cmake
      MAKE: /mingw64/bin/mingw32-make      
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake mingw-w64-x86_64-make            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd libjxl-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg -p PKGBUILD-new 
    - name: Release 
      run: |
        ./release-dev.sh libjxl-dev libjxl-dev         

  libmodplug:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd libmodplug-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libmodplug-dev libmodplug-dev 

  libmysofa:
    needs: [zlib]
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      CMAKE: /mingw64/bin/cmake      
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        ./install-dev.sh zlib-dev                  
        cd libmysofa-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Release 
      run: |
        ./release-dev.sh libmysofa-dev libmysofa-dev                           

  libogg:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd libogg-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libogg-dev libogg-dev 
        
  libopenmpt:
    needs: [zlib, libogg, libsdl2, libvorbis_aotuv]
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        ./install-dev.sh zlib-dev libogg-dev libsdl2-dev libvorbis_aotuv-dev         
        cd libopenmpt-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libopenmpt-dev libopenmpt-dev                

  libplacebo:
    needs: [lcms2, vulkan, shaderc, spirv-cross]
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git           
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install python dependencies
      run: |
        pip install meson ninja Jinja2
    - name: Build
      run: |
        ./install-dev.sh lcms2-dev vulkan-dev shaderc-dev spirv-cross-dev
        pypath=$(cygpath -u $pythonLocation)
        PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin      
        cd libplacebo-dev; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libplacebo-dev libplacebo-dev
        
  libpng:
    needs: [zlib]
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        ./install-dev.sh zlib-dev        
        cd libpng-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libpng-dev libpng-dev      
        
  libsdl2:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd libsdl2-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libsdl2-dev libsdl2-dev 

  libsixel:
    needs: [libjpeg, libpng]
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:    
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git              
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install python dependencies
      run: |
        pip install meson ninja                
    - name: Build
      run: |
        ./install-dev.sh libjpeg-dev libpng-dev zlib-dev
        pypath=$(cygpath -u $pythonLocation)
        PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin       
        cd libsixel; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg -p PKGBUILD-new
    - name: Release 
      run: |
        ./release-dev.sh libsixel-dev libsixel 

  libsoxr:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      CMAKE: /mingw64/bin/cmake      
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd libsoxr-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Release 
      run: |
        ./release-dev.sh libsoxr-dev libsoxr-dev                   

  libspeex:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd libspeex-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libspeex-dev libspeex-dev 

  libsrt:
    needs: [mbedtls]
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      CMAKE: /mingw64/bin/cmake      
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        ./install-dev.sh mbedtls-dev                   
        cd libsrt-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Release 
      run: |
        ./release-dev.sh libsrt-dev libsrt-dev 

  libssh:
    needs: [mbedtls, zlib]
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      CMAKE: /mingw64/bin/cmake
      MAKE: /mingw64/bin/mingw32-make      
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake mingw-w64-x86_64-make           
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        ./install-dev.sh zlib-dev mbedtls-dev                  
        cd libssh-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Release 
      run: |
        ./release-dev.sh libssh-dev libssh-dev 

  libudfread:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd libudfread-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libudfread-dev libudfread-dev

  libunibreak:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd libunibreak-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libunibreak-dev libunibreak-dev                             

  libvorbis_aotuv:
    needs: [libogg]
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        ./install-dev.sh libogg-dev
        cd libvorbis_aotuv-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libvorbis_aotuv-dev libvorbis_aotuv-dev

  libvpl:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      CMAKE: /mingw64/bin/cmake
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake           
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd libvpl-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Release 
      run: |
        ./release-dev.sh libvpl-dev libvpl-dev         

  libvpx:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool yasm git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd libvpx-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libvpx-dev libvpx-dev

  libwebp:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd libwebp-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libwebp-dev libwebp-dev

  libxml2:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd libxml2-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libxml2-dev libxml2-dev        
        
  libxvid:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd libxvid-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libxvid-dev libxvid-dev  
        
  libzimg:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd libzimg-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libzimg-dev libzimg-dev  

  libzvbi:
    needs: [libpng]
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel gettext-devel autoconf-wrapper automake-wrapper libtool git     
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        ./install-dev.sh libiconv-dev libpng-dev
        cd libzvbi-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh libzvbi-dev libzvbi-dev

  luajit2:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd luajit2; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh luajit2-dev luajit2 

  mbedtls:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      CMAKE: /mingw64/bin/cmake
      MAKE: /mingw64/bin/mingw32-make
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake mingw-w64-x86_64-make            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install python dependencies
      run: |
        pip install Jinja2
    - name: Build
      run: |
        pypath=$(cygpath -u $pythonLocation)
        PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin      
        cd mbedtls-dev; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Release 
      run: |
        ./release-dev.sh mbedtls-dev mbedtls-dev               

  mpv:
    needs: [libcaca, libjpeg, libpng, libsdl2, libsixel, openal-soft, ffmpeg, luajit2, libass, lcms2, libbluray, libudfread, libdvdnav, libplacebo, angle, mujs, rubberband, spirv-cross, vulkan]
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool yasm git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Build
      run: |
        ./install-dev.sh \
          amf-headers-dev \
          angle-headers-dev \
          avisynth-dev \
          dav1d-dev \
          davs2-dev \
          ffmpeg-dev \
          ffnvcodec-dev \
          freetype2-dev \
          fribidi-dev \
          gmp-dev \
          harfbuzz-dev \
          mbedtls-dev \
          lame-dev \
          lcms2-dev \
          libass-dev \
          libbs2b-dev \
          libbluray-dev \
          libcaca-dev \
          libdvdcss-dev \
          libdvdread-dev \
          libdvdnav-dev \
          libiconv-dev \
          libmodplug-dev \
          libmysofa-dev \
          libiconv-dev \
          libjpeg-dev \
          libjxl-dev \
          libogg-dev \
          libopenmpt-dev \
          libplacebo-dev \
          libpng-dev \
          libsdl2-dev \
          libsixel-dev \
          libsoxr-dev \
          libspeex-dev \
          libsrt-dev \
          libssh-dev \
          libudfread-dev \
          libunibreak-dev \
          libvorbis_aotuv-dev \
          libvpl-dev \
          libvpx-dev \
          libwebp-dev \
          libxml2-dev \
          libxvid-dev \
          libzimg-dev \
          libzvbi-dev \
          luajit2-dev \
          mujs-dev \
          openal-soft-dev \
          opus-dev \
          rubberband-dev \
          shaderc-dev \
          spirv-cross-dev \
          uavs3d-dev \
          vapoursynth-dev \
          vulkan-dev \
          zlib-dev
        pypath=$(cygpath -u $pythonLocation)
        PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin
        pip install https://github.com/mesonbuild/meson/archive/refs/heads/master.zip
        pip install ninja
        cd mpv; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg -p PKGBUILD-new
    - name: Delete old libmpv
      run: |
        ./release-latest.sh libmpv-git
    - name: Release mpv and libmpv
      run: |
        ./release-latest.sh mpv-git mpv 

  mujs:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd mujs; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh mujs-dev mujs

  openal-soft:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      CMAKE: /mingw64/bin/cmake
      MAKE: /mingw64/bin/mingw32-make
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake mingw-w64-x86_64-make            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd openal-soft-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Release 
      run: |
        ./release-dev.sh openal-soft-dev openal-soft-dev              

  opus:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd opus-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh opus-dev opus-dev

  package:
    needs: [mpv, config]
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main  
    - name: Setup Packages      
      run: |
        ./install-latest.sh ffmpeg-git mpv-git libmpv-git config
    - name: Zip Packages    
      run: |
        $date = Get-Date -Format "yyyyMMdd"
        curl -OL https://github.com/yt-dlp/yt-dlp/releases/download/2022.11.11/yt-dlp.exe
        mv yt-dlp.exe D:\msys64\opt\mpv
        7z a git-mpv-${date}.7z D:\msys64\opt\mpv\*
        7z a git-libmpv-${date}.7z D:\msys64\opt\libmpv\*
        7z a git-ffmpeg-${date}-1009396.7z D:\msys64\opt\ffmpeg\*
    - name: Release 
      run: |
        ./release-package.sh

  rubberband:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:   
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool nasm git              
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install python dependencies
      run: |
        pip install meson ninja        
    - name: Build
      run: |
        pypath=$(cygpath -u $pythonLocation)
        PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin
        cd rubberband; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh rubberband-dev rubberband        
  
  shaderc:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      CMAKE: /mingw64/bin/cmake
      MAKE: /mingw64/bin/mingw32-make
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake mingw-w64-x86_64-make     
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd shaderc-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh shaderc-dev shaderc-dev

  spirv-cross:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      CMAKE: /mingw64/bin/cmake
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd spirv-cross-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg -p PKGBUILD-new
    - name: Release 
      run: |
        ./release-dev.sh spirv-cross-dev spirv-cross-dev

  uavs3d:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      CMAKE: /mingw64/bin/cmake
      MAKE: /mingw64/bin/mingw32-make
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake mingw-w64-x86_64-make     
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd uavs3d-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg 
    - name: Release 
      run: |
        ./release-dev.sh uavs3d-dev uavs3d-dev        

  vapoursynth:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool     
    - name: Prepare
      run: git config --global core.autocrlf input
    - uses: actions/checkout@main     
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd vapoursynth; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG="pkg-config --static" makepkg 
    - name: Release 
      run: |
        ./release-dev.sh vapoursynth-dev vapoursynth

  vulkan:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      CMAKE: /mingw64/bin/cmake
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool mingw-w64-x86_64-cmake git     
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd vulkan-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg -p PKGBUILD-new
    - name: Release 
      run: |
        ./release-dev.sh vulkan-dev vulkan-dev
        
  zlib:
    runs-on: windows-2022
    env:
      GH_TOKEN: ${{ github.token }}
      CURL_RETRIES: "--connect-timeout 60 --retry 5 --retry-delay 5"      
      C_INCLUDE_PATH: /opt/include
      CPLUS_INCLUDE_PATH: /opt/include
      LIBRARY_PATH: /opt/lib
      MSYSTEM: UCRT64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20221123_13.0.0_x64-ucrt
    - name: Build
      run: |
        cd zlib-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release 
      run: |
        ./release-dev.sh zlib-dev zlib-dev
