name: build-weekly

on:
  workflow_dispatch:
  #schedule:
  #- cron: '30 0 * * MON'
    
jobs:
  config:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git   
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      shell: msys2 {0}
      run: |
        cd mpv-config; makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-latest.sh config mpv-config

  ffmpeg:
    needs: [amf, avisynth, dav1d, davs2, gmp, lame, libaribb24, libbs2b, libjxl, libvpl, libmodplug, libmysofa, libogg, libopenmpt, libsdl2, libsoxr, libspeex, libsrt, libssh, libvorbis_aotuv, libvpx, libwebp, libxml2, libxvid, libzimg, libzvbi, mbedtls, opus, ffnvcodec, uavs3d, vapoursynth, zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool nasm git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/amf-headers-dev-1.4.29-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/avisynth-dev-3.7.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/dav1d-dev-1.2.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/davs2-dev-1.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffnvcodec-dev-12.0.16.0-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/gmp-dev-6.2.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lame-dev-3.100-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libaribb24-dev-1.0.3-1-x86_64.pkg.tar.zst                
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libbs2b-dev-3.1.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libiconv-dev-1.17-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjxl-dev-0.8.1-1-x86_64.pkg.tar.zst                
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libmodplug-dev-0.8.9.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libmysofa-dev-1.3.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libopenmpt-dev-0.7.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.39-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsdl2-dev-2.26.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsoxr-dev-0.1.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libspeex-dev-1.2.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsrt-dev-1.5.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libssh-dev-0.10.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvorbis_aotuv-dev-1.3.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvpl-dev-2023.2.1-1-x86_64.pkg.tar.zst         
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvpx-dev-1.12.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libwebp-dev-1.3.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libxml2-dev-2.11.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libxvid-dev-1.3.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libzimg-dev-3.0.4-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libzvbi-dev-0.2.41-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/mbedtls-dev-3.4.0-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/opus-dev-1.4-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/uavs3d-dev-1.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vapoursynth-dev-62-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.13-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd ffmpeg; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-latest.sh ffmpeg-git ffmpeg
        ./release-dev.sh ffmpeg-dev ffmpeg

  amf:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git             
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |                  
        cd amf-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg  
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh amf-headers-dev amf-dev

  angle:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git             
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |                  
        cd angle-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg  
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh angle-headers-dev angle-dev

  avisynth:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake mingw-w64-x86_64-make            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
        MAKE: /mingw64/bin/mingw32-make
      shell: msys2 {0}
      run: |                  
        cd avisynth-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg  
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh avisynth-dev avisynth-dev

  dav1d:
    runs-on: windows-2022
    steps:   
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool nasm git    
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'        
    - name: Install python dependencies
      run: |
        pip install meson ninja  
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: | 
        pypath=$(cygpath -u $pythonLocation)
        PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin
        cd dav1d-dev; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh dav1d-dev dav1d-dev

  davs2:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git nasm     
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |      
        cd davs2-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh davs2-dev davs2-dev

  ffnvcodec:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git       
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd ffnvcodec-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh ffnvcodec-dev ffnvcodec-dev

  freetype2:
    needs: [libpng, zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git             
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install python dependencies
      run: |
        pip install meson ninja
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        pypath=$(cygpath -u $pythonLocation)
        PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.39-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.13-1-x86_64.pkg.tar.zst      
        pacman -U *.zst --noconfirm        
        cd freetype2-dev; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg -p PKGBUILD-new
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh freetype2-dev freetype2-dev

  fribidi:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git              
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install python dependencies
      run: |
        pip install meson ninja     
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        pypath=$(cygpath -u $pythonLocation)
        PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin
        cd fribidi-dev; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg -p PKGBUILD-new
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh fribidi-dev fribidi-dev

  gmp:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd gmp-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh gmp-dev gmp-dev       

  harfbuzz:
    needs: [freetype2, libpng]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git             
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install python dependencies
      run: |
        pip install meson ninja
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        pypath=$(cygpath -u $pythonLocation)
        PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2_13_0-1-x86_64.pkg.tar.zst 
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.39-1-x86_64.pkg.tar.zst     
        pacman -U *.zst --noconfirm         
        cd harfbuzz-dev; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg -p PKGBUILD-new
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh harfbuzz-dev harfbuzz-dev 

  lame:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool nasm      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd lame-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh lame-dev lame-dev 

  lcms2:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd lcms2-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh lcms2-dev lcms2-dev 

  libass:
    needs: [freetype2, fribidi, harfbuzz, libunibreak]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool nasm git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |      
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2_13_0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/fribidi-dev-1.0.12-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/harfbuzz-dev-7.3.0-1-x86_64.pkg.tar.zst 
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.39-1-x86_64.pkg.tar.zst       
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libunibreak-dev-5_1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.13-1-x86_64.pkg.tar.zst       
        pacman -U *.zst --noconfirm 
        cd libass-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libass-dev libass-dev

  libaribb24:
    needs: [libpng, zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.39-1-x86_64.pkg.tar.zst      
        curl -OL https://github.com/eko5624/mpv-win64/releases/download/dev/zlib-dev-1.2.13-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libaribb24-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libaribb24-dev libaribb24-dev        

  libbluray:
    needs: [freetype2, libpng, libudfread, zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2_13_0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.39-1-x86_64.pkg.tar.zst         
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libudfread-dev-1.1.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.13-1-x86_64.pkg.tar.zst        
        pacman -U *.zst --noconfirm
        cd libbluray-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libbluray-dev libbluray-dev

  libbs2b:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd libbs2b-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libbs2b-dev libbs2b-dev

  libcaca:
    runs-on: windows-2022
    steps:   
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git              
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: | 
        cd libcaca-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libcaca-dev libcaca-dev

  libdovi:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper git            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Install rust
      shell: bash
      run: |
        rm -rf /c/Users/runneradmin/.cargo
        curl -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain none --no-modify-path
        rustup toolchain install stable-x86_64-pc-windows-gnu --profile minimal 
        rustup update      
    - name: Install cargo-c
      run: |
        curl -OL https://github.com/lu-zero/cargo-c/releases/latest/download/cargo-c-windows-gnu.zip
        &'C:\Program Files\7-Zip\7z.exe' x cargo-c-windows-gnu.zip -o'C:\Users\runneradmin\.rustup\toolchains\stable-x86_64-pc-windows-gnu\bin'       
    - name: Build
      env:
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |                  
        cd libdovi-dev; PATH=/usr/bin:/opt/bin:/c/Users/runneradmin/.rustup/toolchains/stable-x86_64-pc-windows-gnu/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
      
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libdovi-dev libdovi-dev                     

  libdvdcss:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd libdvdcss-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libdvdcss-dev libdvdcss-dev

  libdvdnav:
    needs: [libdvdread]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdcss-dev-1.4.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdread-dev-6.1.3-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libdvdnav-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libdvdnav-dev libdvdnav-dev

  libdvdread:
    needs: [libdvdcss]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdcss-dev-1.4.3-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libdvdread-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libdvdread-dev libdvdread-dev         

  libjpeg:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool mingw-w64-x86_64-cmake git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: |
        cd libjpeg-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libjpeg-dev libjpeg-dev
        
  libjxl:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake mingw-w64-x86_64-make            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
        MAKE: /mingw64/bin/mingw32-make
      shell: msys2 {0}
      run: |            
        cd libjxl-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg -p PKGBUILD-new 
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libjxl-dev libjxl-dev         

  libmodplug:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd libmodplug-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libmodplug-dev libmodplug-dev 

  libmysofa:
    needs: [zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: | 
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.13-1-x86_64.pkg.tar.zst      
        pacman -U *.zst --noconfirm                   
        cd libmysofa-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libmysofa-dev libmysofa-dev                           

  libogg:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git     
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd libogg-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libogg-dev libogg-dev 
        
  libopenmpt:
    needs: [zlib, libogg, libsdl2, libvorbis_aotuv]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.13-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsdl2-dev-2.26.5-1-x86_64.pkg.tar.zst 
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvorbis_aotuv-dev-1.3.7-1-x86_64.pkg.tar.zst      
        pacman -U *.zst --noconfirm         
        cd libopenmpt-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libopenmpt-dev libopenmpt-dev                

  libplacebo:
    needs: [libdovi, lcms2, vulkan, shaderc, spirv-cross]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git           
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install python dependencies
      run: |
        pip install meson ninja Jinja2
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        pypath=$(cygpath -u $pythonLocation)
        PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin      
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lcms2-dev-2.15-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdovi-dev-3.1.2-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vulkan-dev-1.3.243.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/shaderc-dev-2023.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/spirv-cross-dev-1.3.243.0-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm 
        cd libplacebo-dev; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libplacebo-dev libplacebo-dev
        
  libpng:
    needs: [zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.13-1-x86_64.pkg.tar.zst     
        pacman -U *.zst --noconfirm         
        cd libpng-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libpng-dev libpng-dev      
        
  libsdl2:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake mingw-w64-x86_64-make
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
        MAKE: /mingw64/bin/mingw32-make
      shell: msys2 {0}
      run: |        
        cd libsdl2-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libsdl2-dev libsdl2-dev 

  libsixel:
    needs: [libjpeg, libpng]
    runs-on: windows-2022
    steps:    
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git              
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install python dependencies
      run: |
        pip install meson ninja                
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: | 
        pypath=$(cygpath -u $pythonLocation)
        PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjpeg-dev-2.1.91-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.39-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.13-1-x86_64.pkg.tar.zst 
        pacman -U *.zst --noconfirm        
        cd libsixel; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg -p PKGBUILD-new
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libsixel-dev libsixel 

  libsoxr:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: |                  
        cd libsoxr-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libsoxr-dev libsoxr-dev                   

  libspeex:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd libspeex-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libspeex-dev libspeex-dev 

  libsrt:
    needs: [mbedtls]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: | 
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/mbedtls-dev-3.4.0-1-x86_64.pkg.tar.zst      
        pacman -U *.zst --noconfirm                   
        cd libsrt-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libsrt-dev libsrt-dev 

  libssh:
    needs: [mbedtls, zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake mingw-w64-x86_64-make           
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
        MAKE: /mingw64/bin/mingw32-make
      shell: msys2 {0}
      run: |  
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.13-1-x86_64.pkg.tar.zst     
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/mbedtls-dev-3.4.0-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm                   
        cd libssh-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libssh-dev libssh-dev 

  libudfread:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd libudfread-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libudfread-dev libudfread-dev

  libunibreak:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |      
        cd libunibreak-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libunibreak-dev libunibreak-dev                             

  libvorbis_aotuv:
    needs: [libogg]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libvorbis_aotuv-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libvorbis_aotuv-dev libvorbis_aotuv-dev

  libvpl:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake           
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: |                
        cd libvpl-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libvpl-dev libvpl-dev         

  libvpx:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool yasm git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd libvpx-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libvpx-dev libvpx-dev

  libwebp:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd libwebp-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libwebp-dev libwebp-dev

  libxml2:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd libxml2-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libxml2-dev libxml2-dev        
        
  libxvid:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd libxvid-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libxvid-dev libxvid-dev  
        
  libzimg:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd libzimg-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libzimg-dev libzimg-dev  

  libzvbi:
    needs: [libpng]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel gettext-devel autoconf-wrapper automake-wrapper libtool git     
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libiconv-dev-1.17-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.39-1-x86_64.pkg.tar.zst        
        pacman -U *.zst --noconfirm
        cd libzvbi-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh libzvbi-dev libzvbi-dev

  luajit2:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |       
        cd luajit2; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh luajit2-dev luajit2 

  mbedtls:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake mingw-w64-x86_64-make            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install python dependencies
      run: |
        pip install Jinja2 jsonschema
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
        MAKE: /mingw64/bin/mingw32-make
      shell: msys2 {0}
      run: |                         
        pypath=$(cygpath -u $pythonLocation)
        PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin      
        cd mbedtls-dev; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh mbedtls-dev mbedtls-dev               

  mpv:
    needs: [libcaca, libjpeg, libpng, libsdl2, libsixel, openal-soft, ffmpeg, luajit2, libass, lcms2, libbluray, libudfread, libdvdnav, libplacebo, angle, mujs, rubberband, spirv-cross, vulkan]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool yasm git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install python dependencies
      run: |
        pip install meson ninja 
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        pypath=$(cygpath -u $pythonLocation)
        PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin 
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/amf-headers-dev-1.4.29-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/angle-headers-dev-1.0.772-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/avisynth-dev-3.7.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/dav1d-dev-1.2.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/davs2-dev-1.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffmpeg-dev-6.0-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffnvcodec-dev-12.0.16.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2_13_0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/fribidi-dev-1.0.12-1-x86_64.pkg.tar.zst                
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/gmp-dev-6.2.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/harfbuzz-dev-7.3.0-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lame-dev-3.100-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lcms2-dev-2.15-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libaribb24-dev-1.0.3-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libass-dev-0.17.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libbluray-dev-1.3.4-1-x86_64.pkg.tar.zst                        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libbs2b-dev-3.1.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libcaca-dev-0.99.beta20-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdovi-dev-3.1.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdcss-dev-1.4.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdnav-dev-6.1.1-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdread-dev-6.1.3-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libiconv-dev-1.17-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjpeg-dev-2.1.91-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjxl-dev-0.8.1-1-x86_64.pkg.tar.zst                
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libmodplug-dev-0.8.9.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libmysofa-dev-1.3.1-1-x86_64.pkg.tar.zst               
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libopenmpt-dev-0.7.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libplacebo-dev-5.264.1-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.39-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsdl2-dev-2.26.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsixel-dev-1.10.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsoxr-dev-0.1.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libspeex-dev-1.2.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsrt-dev-1.5.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libssh-dev-0.10.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libudfread-dev-1.1.2-1-x86_64.pkg.tar.zst         
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libunibreak-dev-5_1-1-x86_64.pkg.tar.zst               
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvorbis_aotuv-dev-1.3.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvpl-dev-2023.2.1-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvpx-dev-1.12.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libwebp-dev-1.3.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libxml2-dev-2.11.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libxvid-dev-1.3.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libzimg-dev-3.0.4-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libzvbi-dev-0.2.41-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/luajit2-dev-2.1_20230410-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/mbedtls-dev-3.4.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/mujs-dev-1.3.3-1-x86_64.pkg.tar.zst                
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/openal-soft-dev-1.23.1-1-x86_64.pkg.tar.zst       
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/opus-dev-1.4-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/rubberband-dev-3.2.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/shaderc-dev-2023.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/spirv-cross-dev-1.3.243.0-1-x86_64.pkg.tar.zst                
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/uavs3d-dev-1.1-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vapoursynth-dev-62-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vulkan-dev-1.3.243.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.13-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd mpv; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete old libmpv
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-latest.sh libmpv-git
    - name: Release mpv and libmpv
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-latest.sh mpv-git mpv 

  mujs:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd mujs; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh mujs-dev mujs

  openal-soft:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake mingw-w64-x86_64-make            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
        MAKE: /mingw64/bin/mingw32-make
      shell: msys2 {0}
      run: |            
        cd openal-soft-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh openal-soft-dev openal-soft-dev              

  opus:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd opus-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh opus-dev opus-dev

  package:
    needs: [mpv, config]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Setup Packages      
      shell: msys2 {0}
      run: |        
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/config-1.0-1-x86_64.pkg.tar.xz        
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/ffmpeg-git-6.0-1-x86_64.pkg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/libmpv-git-0.35.1-1-x86_64.pkg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/mpv-git-0.35.1-1-x86_64.pkg.tar.xz
        pacman -U *.xz --noconfirm

    - name: Get ffmpeg latest commit sha
      run: |
        echo "ffmpeg_sha=$(cat /d/msys64/opt/ffmpeg/SHORT_SHA)" >> $GITHUB_ENV
      shell: bash

    - name: Zip Packages    
      run: | 
        $date = Get-Date -Format "yyyyMMdd"
        curl -OL https://github.com/yt-dlp/yt-dlp/releases/download/2023.03.04/yt-dlp.exe
        mv yt-dlp.exe D:\msys64\opt\mpv
        7z a static-mpv-${date}.7z D:\msys64\opt\mpv\*
        7z a git-libmpv-${date}.7z D:\msys64\opt\libmpv\*
        7z a git-ffmpeg-${date}-${{ env.ffmpeg_sha }}.7z D:\msys64\opt\ffmpeg\*
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-package.sh

  rubberband:
    runs-on: windows-2022
    steps:   
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool nasm git              
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install python dependencies
      run: |
        pip install meson ninja        
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: | 
        pypath=$(cygpath -u $pythonLocation)
        PATH=/d/ucrt64/bin:$pypath:$pypath/Scripts:/usr/bin:/opt/bin
        cd rubberband; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh rubberband-dev rubberband        
  
  shaderc:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake mingw-w64-x86_64-make     
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
        MAKE: /mingw64/bin/mingw32-make
      shell: msys2 {0}
      run: |
        cd shaderc-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh shaderc-dev shaderc-dev

  spirv-cross:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: |
        cd spirv-cross-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg -p PKGBUILD-new
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh spirv-cross-dev spirv-cross-dev

  uavs3d:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git mingw-w64-x86_64-cmake mingw-w64-x86_64-make     
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
        MAKE: /mingw64/bin/mingw32-make
      shell: msys2 {0}
      run: |
        cd uavs3d-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg 
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh uavs3d-dev uavs3d-dev        

  vapoursynth:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel    
    - name: Prepare
      run: git config --global core.autocrlf input
    - uses: actions/checkout@main     
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      shell: msys2 {0}
      run: |
        cd vapoursynth; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg 
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh vapoursynth-dev vapoursynth

  vulkan:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool mingw-w64-x86_64-cmake git     
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: |
        cd vulkan-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh vulkan-dev vulkan-dev
        
  zlib:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autoconf-wrapper automake-wrapper libtool git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@main
    - uses: actions/cache@main
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20230426_13.1.0_x64-ucrt
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd zlib-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Release
      env:
        GH_TOKEN: ${{ github.token }}    
      shell: bash 
      run: |
        ./release-dev.sh zlib-dev zlib-dev
