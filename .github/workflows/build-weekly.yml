name: build-weekly

on:
  workflow_dispatch:
  #schedule:
  #- cron: '30 0 * * MON'
    
jobs:
  config:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git   
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      shell: msys2 {0}
      run: |
        cd mpv-config; makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: latest
        assets: config*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: mpv-config/*pkg*.xz
        tag: latest
        overwrite: true
        file_glob: true

  ffmpeg:
    needs: [amf, avisynth, dav1d, gmp, lame, mbedtls, libbs2b, libjxl, libmfx, libmodplug, libmysofa, libogg, libopenmpt, libsdl2, libsoxr, libspeex, libvorbis_aotuv, libvpx, libwebp, libxml2, libxvid, libzimg, opus, ffnvcodec, vapoursynth, zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools nasm git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lame-dev-3.100-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjxl-dev-0.6.1-1-x86_64.pkg.tar.zst 
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libmfx-dev-1.35.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/amf-headers-dev-1.4.26-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/avisynth-dev-3.7.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/dav1d-dev-1.0.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/gmp-dev-6.2.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/mbedtls-dev-3.2.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libbs2b-dev-3.1.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libmodplug-dev-0.8.9.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libmysofa-dev-1.2.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libopenmpt-dev-0.6.4-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsdl2-dev-2.0.22-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsoxr-dev-0.1.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libspeex-dev-1.2.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsrt-dev-1.5.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libssh-dev-0.9.6-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvorbis_aotuv-dev-1.3.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvpx-dev-1.12.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libwebp-dev-1.2.4-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libxml2-dev-2.9.14-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libxvid-dev-1.3.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libzimg-dev-3.0.4-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/opus-dev-1.3.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffnvcodec-dev-11.1.5.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vapoursynth-dev-59-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.12-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd ffmpeg; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete Dev
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: ffmpeg*
        fail-if-no-assets: false
        fail-if-no-release: false    
    - name: Upload Dev
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ffmpeg/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  amf:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git             
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |                  
        cd amf-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg  
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: amf*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: amf-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  angle:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git             
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |                  
        cd angle-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg  
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: angle*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: angle-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  avisynth:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git mingw-w64-x86_64-cmake mingw-w64-x86_64-make            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: |                  
        cd avisynth-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin makepkg  
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: avisynth*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: avisynth-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  dav1d:
    runs-on: windows-2022
    steps:   
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools nasm git    

    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}      

    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: | 
        PATH=/d/ucrt64/bin:/c/hostedtoolcache/windows/python/3.7.9/x64:/c/hostedtoolcache/windows/python/3.7.9/x64/scripts/usr/bin:/opt/bin
        pip install meson ninja 
        cd dav1d-dev; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: dav1d*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dav1d-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  ffnvcodec:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git       
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd ffnvcodec-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: ffnvcodec*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ffnvcodec-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  freetype2:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd freetype2-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: freetype2*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: freetype2-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  fribidi:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git              
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}       

    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        PATH=/d/ucrt64/bin:/c/hostedtoolcache/windows/python/3.7.9/x64:/c/hostedtoolcache/windows/python/3.7.9/x64/scripts:/usr/bin:/opt/bin 
        pip install meson ninja 
        cd fribidi-dev; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: fribidi*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: fribidi-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  gmp:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd gmp-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: gmp*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: gmp-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true        

  harfbuzz:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git             
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}

    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        PATH=/d/ucrt64/bin:/c/hostedtoolcache/windows/python/3.7.9/x64:/c/hostedtoolcache/windows/python/3.7.9/x64/scripts:/usr/bin:/opt/bin
        pip install meson ninja
        cd harfbuzz-dev; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: harfbuzz*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: harfbuzz-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true  

  lame:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools nasm      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd lame-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: lame*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: lame-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  lcms2:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd lcms2-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: lcms2*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: lcms2-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libass:
    needs: [freetype2, fribidi, harfbuzz]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools nasm git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |      
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2_12_1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/fribidi-dev-1.0.12-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/harfbuzz-dev-5.1.0-1-x86_64.pkg.tar.zst       
        pacman -U *.zst --noconfirm 
        cd libass-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete      
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libass*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libass-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libbluray:
    needs: [freetype2, libudfread]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2_12_1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libudfread-dev-1.1.2-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libbluray-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libbluray*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libbluray-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true 

  libbs2b:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd libbs2b-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libbs2b*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libbs2b-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true 

  libcaca:
    runs-on: windows-2022
    steps:   
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git              
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: | 
        cd libcaca-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libcaca*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libcaca-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true                

  libdvdcss:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd libdvdcss-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libdvdcss*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libdvdcss-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libdvdnav:
    needs: [libdvdread]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdcss-dev-1.4.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdread-dev-6.1.3-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libdvdnav-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libdvdnav*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libdvdnav-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libdvdread:
    needs: [libdvdcss]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdcss-dev-1.4.3-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libdvdread-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libdvdread*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libdvdread-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true  
        
  libjxl:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git mingw-w64-x86_64-cmake mingw-w64-x86_64-make            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: |            
        cd libjxl-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg -p PKGBUILD-test 
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libjxl*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libjxl-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libjpeg:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools mingw-w64-x86_64-cmake git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: |
        cd libjpeg-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libjpeg*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libjpeg-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true 
        
  libmfx:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd libmfx-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libmfx*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libmfx-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libmodplug:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd libmodplug-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libmodplug*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libmodplug-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true 

  libmysofa:
    needs: [zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git mingw-w64-x86_64-cmake            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: | 
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.12-1-x86_64.pkg.tar.zst      
        pacman -U *.zst --noconfirm                   
        cd libmysofa-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libmysofa*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libmysofa-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true                           

  libogg:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd libogg-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libogg*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libogg-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true
        
  libopenmpt:
    needs: [zlib, libogg, libsdl2, libvorbis_aotuv]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.12-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsdl2-dev-2.0.22-1-x86_64.pkg.tar.zst 
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvorbis_aotuv-dev-1.3.7-1-x86_64.pkg.tar.zst      
        pacman -U *.zst --noconfirm         
        cd libopenmpt-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libopenmpt*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libopenmpt-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true                

  libplacebo:
    needs: [lcms2, vulkan, shaderc, spirv-cross]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git           
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}

    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        PATH=/d/ucrt64/bin:/c/hostedtoolcache/windows/python/3.7.9/x64:/c/hostedtoolcache/windows/python/3.7.9/x64/scripts:/usr/bin:/opt/bin       
        pip install meson ninja mako Jinja
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lcms2-dev-2.13.1-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vulkan-dev-1.3.224-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/shaderc-dev-2022.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/spirv-cross-dev-2021.01.15-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm 
        cd libplacebo-dev; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libplacebo*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libplacebo-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true
        
  libpng:
    needs: [zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.12-1-x86_64.pkg.tar.zst     
        pacman -U *.zst --noconfirm         
        cd libpng-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libpng*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libpng-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true        
        
  libsdl2:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd libsdl2-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libsdl2*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libsdl2-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true 

  libsixel:
    runs-on: windows-2022
    steps:   
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git              
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: | 
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjpeg-dev-2.1.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.37-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libsixel; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libsixel*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libsixel/*.zst
        tag: dev
        overwrite: true
        file_glob: true        

  libsoxr:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git mingw-w64-x86_64-cmake            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: |                  
        cd libsoxr-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libsoxr*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libsoxr-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true                    

  libspeex:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd libspeex-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libspeex*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libspeex-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true 

  libsrt:
    needs: [mbedtls]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git mingw-w64-x86_64-cmake            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: | 
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/mbedtls-dev-3.2.1-1-x86_64.pkg.tar.zst      
        pacman -U *.zst --noconfirm                   
        cd libsrt-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libsrt*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libsrt-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true  

  libssh:
    needs: [mbedtls, zlib]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git mingw-w64-x86_64-cmake mingw-w64-x86_64-make           
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: |  
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.12-1-x86_64.pkg.tar.zst     
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/mbedtls-dev-3.2.1-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm                   
        cd libssh-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libssh*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libssh-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libudfread:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd libudfread-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libudfread*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libudfread-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true                        

  libvorbis_aotuv:
    needs: [libogg]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd libvorbis_aotuv-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libvorbis_aotuv*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libvorbis_aotuv-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libvpx:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools yasm git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd libvpx-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libvpx*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libvpx-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true   

  libwebp:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd libwebp-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libwebp*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libwebp-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libxml2:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd libxml2-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libxml2*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libxml2-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true          
        
  libxvid:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd libxvid-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libxvid*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libxvid-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true   
        
  libzimg:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd libzimg-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libzimg*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libzimg-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true  

  luajit2:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd luajit2; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete Dev
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: luajit2*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload Dev
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: luajit2/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  mbedtls:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git mingw-w64-x86_64-cmake mingw-w64-x86_64-make            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}

    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: |                         
        PATH=/d/ucrt64/bin:/c/hostedtoolcache/windows/python/3.7.9/x64:/c/hostedtoolcache/windows/python/3.7.9/x64/scripts:/usr/bin:/opt/bin       
        pip install Jinja
        cd mbedtls-dev; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: mbedtls*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: mbedtls-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true               

  mpv:
    needs: [libcaca, libjpeg, libpng, libsdl2, libsixel, openal-soft, ffmpeg, luajit2, libass, lcms2, libbluray, libudfread, libdvdnav, libplacebo, angle, mujs, rubberband, spirv-cross, vulkan]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools yasm git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}

    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        PATH=/d/ucrt64/bin:/c/hostedtoolcache/windows/python/3.7.9/x64:/c/hostedtoolcache/windows/python/3.7.9/x64/scripts:/usr/bin:/opt/bin
        pip install https://github.com/mesonbuild/meson/archive/refs/heads/master.zip
        pip install ninja      
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lame-dev-3.100-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libcaca-dev-0.99.beta20-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjpeg-dev-2.1.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libjxl-dev-0.6.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libmfx-dev-1.35.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/amf-headers-dev-1.4.26-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/angle-headers-dev-1.0.772-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/avisynth-dev-3.7.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/dav1d-dev-1.0.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/gmp-dev-6.2.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/mbedtls-dev-3.2.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libbs2b-dev-3.1.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libmodplug-dev-0.8.9.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libmysofa-dev-1.2.1-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libopenmpt-dev-0.6.4-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libpng-dev-1.6.37-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsdl2-dev-2.0.22-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsixel-dev-1.8.6-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsoxr-dev-0.1.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libspeex-dev-1.2.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libsrt-dev-1.5.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libssh-dev-0.9.6-1-x86_64.pkg.tar.zst                
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvorbis_aotuv-dev-1.3.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvpx-dev-1.12.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libwebp-dev-1.2.4-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libxml2-dev-2.9.14-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libxvid-dev-1.3.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libzimg-dev-3.0.4-1-x86_64.pkg.tar.zst 
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/openal-soft-dev-1.22.2-1-x86_64.pkg.tar.zst       
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/opus-dev-1.3.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffnvcodec-dev-11.1.5.1-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffmpeg-dev-5.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/luajit2-dev-2.1_20220411-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffnvcodec-dev-11.1.5.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/mujs-dev-1.2.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/rubberband-dev-3.0.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vapoursynth-dev-59-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2_12_1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/fribidi-dev-1.0.12-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/harfbuzz-dev-5.1.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libass-dev-0.16.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lcms2-dev-2.13.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libbluray-dev-1.3.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libudfread-dev-1.1.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdcss-dev-1.4.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdread-dev-6.1.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdnav-dev-6.1.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vulkan-dev-1.3.224-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/shaderc-dev-2022.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/spirv-cross-dev-2021.01.15-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libplacebo-dev-4.208.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/zlib-dev-1.2.12-1-x86_64.pkg.tar.zst
        pacman -U *.zst --noconfirm
        cd mpv; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg -p PKGBUILD-meson
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: latest
        assets: mpv*
        fail-if-no-assets: false
        fail-if-no-release: false    
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: mpv/*pkg*.xz
        tag: latest
        overwrite: true
        file_glob: true

  mujs:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd mujs; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: mujs*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: mujs/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  openal-soft:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git mingw-w64-x86_64-cmake mingw-w64-x86_64-make            
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: |            
        cd openal-soft-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg  
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: openal-soft*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: openal-soft-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true                

  opus:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd opus-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: opus*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: opus-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  package:
    needs: [mpv, config]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel

    - name: Get mpv latest commit sha
      id: get_sha
      uses: actions/github-script@v6
      with:
        script: |
          const commit = await github.rest.repos.getCommit({
            owner: 'mpv-player',
            repo: 'mpv',
            ref: `master`
          })
          core.setOutput('sha', String(commit.data.sha)) 
    - name: Add SHORT_SHA env 
      run: echo "SHORT_SHA=`echo ${{ steps.get_sha.outputs.sha }}| cut -c1-7`" >> $GITHUB_ENV         
      shell: bash 
    
    - name: Get mpv latest release
      id: version    
      uses: actions/github-script@v6
      with:
        script: |    
          const release = await github.rest.repos.getLatestRelease({
            owner: 'mpv-player',
            repo: 'mpv'
          })
          core.setOutput('version', String(release.data.tag_name)) 
    - name: Add GET_VERSION env 
      run: echo "GET_VERSION=`echo ${{ steps.version.outputs.version }}| cut -c2-`" >> $GITHUB_ENV         
      shell: bash 

    - name: Get yt-dlp latest release
      id: dlp_tag    
      uses: actions/github-script@v6
      with:
        script: |    
          const release = await github.rest.repos.getLatestRelease({
            owner: 'yt-dlp',
            repo: 'yt-dlp'
          })
          core.setOutput('dlp_tag', String(release.data.tag_name)) 
    - name: Get current timestamp      
      id: timestamp
      run: echo "::set-output name=date::$(date +%Y-%m-%d)"    
    - name: Setup Packages      
      shell: msys2 {0}
      run: |        
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/mpv-0.34.1-1-x86_64.pkg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/config-1.0-1-x86_64.pkg.tar.xz
        pacman -U *.xz --noconfirm
    - name: Zip Packages    
      run: | 
        $date = Get-Date -Format "yyyy-MM-dd"
        curl -OL https://github.com/yt-dlp/yt-dlp/releases/download/${{ steps.dlp_tag.outputs.dlp_tag }}/yt-dlp.exe
        mv yt-dlp.exe D:\msys64\opt\bin
        7z a All-in-One-MPV-git-${date}.7z D:\msys64\opt\bin\*
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: All*.7z
        tag: mpv-${{ env.GET_VERSION }}-${{ env.SHORT_SHA }}
        release_name: ${{ steps.timestamp.outputs.date }}
        body: Bump to mpv-player/mpv@${{ env.SHORT_SHA }}
        overwrite: true
        file_glob: true

  rubberband:
    runs-on: windows-2022
    steps:   
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools nasm git              
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}

    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: | 
        PATH=/d/ucrt64/bin:/c/hostedtoolcache/windows/python/3.7.9/x64:/c/hostedtoolcache/windows/python/3.7.9/x64/scripts:/usr/bin:/opt/bin
        pip install meson ninja
        cd rubberband; PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: rubberband*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: rubberband/*.zst
        tag: dev
        overwrite: true
        file_glob: true         
  
  shaderc:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git mingw-w64-x86_64-cmake     
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: |
        cd shaderc-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: shaderc*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: shaderc-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  spirv-cross:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git mingw-w64-x86_64-cmake      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: |
        cd spirv-cross-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: spirv-cross*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: spirv-cross-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  vapoursynth:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools     
    - name: Prepare
      run: git config --global core.autocrlf input
    - uses: actions/checkout@v3     
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      shell: msys2 {0}
      run: |
        cd vapoursynth; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG="pkg-config --static" makepkg 
    - name: Delete Dev
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: vapoursynth*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload Dev
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: vapoursynth/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  vulkan:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools mingw-w64-x86_64-cmake git     
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: |
        cd vulkan-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg -p PKGBUILD-git
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: vulkan*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: vulkan-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true
        
  zlib:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Get HASH ENV
      run: echo "random_hash=$(cat HASH)" >> $GITHUB_ENV
      shell: bash    
    - uses: actions/cache@v3
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220707_12.1.1_x64-ucrt-${{ env.random_hash }}
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |        
        cd zlib-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: zlib*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: zlib-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true        
