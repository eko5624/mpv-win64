name: build-weekly

on:
  workflow_dispatch:
  schedule:
    - cron: '20 0 * * MON'
    
jobs:
  config:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git   
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      shell: msys2 {0}
      run: |
        cd /d/a/mpv-win64/mpv-win64/mpv-config; makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: latest
        assets: config*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: mpv-config/*pkg*.xz
        tag: latest
        overwrite: true
        file_glob: true

  ffmpeg:
    needs: [lame, dav1d, libvorbis_aotuv, opus, ffnvcodec, vapoursynth]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools nasm git      
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lame-dev-3.100-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/dav1d-dev-0.9.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libvorbis_aotuv-dev-1.3.7-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/opus-dev-1.3.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffnvcodec-dev-11.1.5.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vapoursynth-dev-57-1-x86_64.pkg.tar.zst
        pacman -U /d/a/mpv-win64/mpv-win64/*.zst --noconfirm
        cd /d/a/mpv-win64/mpv-win64/ffmpeg; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: latest
        assets: ffmpeg*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Delete Dev
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: ffmpeg*
        fail-if-no-assets: false
        fail-if-no-release: false    
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ffmpeg/*pkg*.xz
        tag: latest
        overwrite: true
        file_glob: true
    - name: Upload Dev
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ffmpeg/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  dav1d:
    runs-on: windows-2022
    steps:
    - run: |
        pip install meson ninja    
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools nasm git              
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: | 
        cd /d/a/mpv-win64/mpv-win64/dav1d-dev; PATH=/d/ucrt64/bin:/c/hostedtoolcache/windows/python/3.9.10/x64/scripts:/usr/bin:/opt/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: dav1d*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dav1d-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  ffnvcodec:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools      
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd /d/a/mpv-win64/mpv-win64/ffnvcodec-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: ffnvcodec*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ffnvcodec-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  freetype2:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd /d/a/mpv-win64/mpv-win64/freetype2-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: freetype2*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: freetype2-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  fribidi:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools
    - run: |
        pip install meson ninja              
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd /d/a/mpv-win64/mpv-win64/fribidi-dev; PATH=/d/ucrt64/bin:/c/hostedtoolcache/windows/python/3.9.10/x64/scripts:/usr/bin:/opt/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: fribidi*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: fribidi-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  harfbuzz:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools
    - run: |
        pip install meson ninja              
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd /d/a/mpv-win64/mpv-win64/harfbuzz-dev; PATH=/d/ucrt64/bin:/c/hostedtoolcache/windows/python/3.9.10/x64/scripts:/usr/bin:/opt/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: harfbuzz*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: harfbuzz-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  lame:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools nasm      
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd /d/a/mpv-win64/mpv-win64/lame-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: lame*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: lame-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  lcms2:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd /d/a/mpv-win64/mpv-win64/lcms2-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: lcms2*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: lcms2-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libass:
    needs: [freetype2, fribidi, harfbuzz]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools nasm git      
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |      
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2.11.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/fribidi-dev-1.0.11-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/harfbuzz-dev-4.0.0-1-x86_64.pkg.tar.zst       
        pacman -U /d/a/mpv-win64/mpv-win64/*.zst --noconfirm 
        cd /d/a/mpv-win64/mpv-win64/libass-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete      
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libass*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libass-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libbluray:
    needs: [freetype2]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools      
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2.11.1-1-x86_64.pkg.tar.zst
        pacman -U /d/a/mpv-win64/mpv-win64/*.zst --noconfirm
        cd /d/a/mpv-win64/mpv-win64/libbluray-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libbluray*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libbluray-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libdvdcss:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools      
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd /d/a/mpv-win64/mpv-win64/libdvdcss-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libdvdcss*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libdvdcss-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libdvdnav:
    needs: [libdvdread]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools      
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdcss-dev-1.4.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdread-dev-6.1.2-1-x86_64.pkg.tar.zst
        pacman -U /d/a/mpv-win64/mpv-win64/*.zst --noconfirm
        cd /d/a/mpv-win64/mpv-win64/libdvdnav-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libdvdnav*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libdvdnav-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libdvdread:
    needs: [libdvdcss]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools      
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdcss-dev-1.4.3-1-x86_64.pkg.tar.zst
        pacman -U /d/a/mpv-win64/mpv-win64/*.zst --noconfirm
        cd /d/a/mpv-win64/mpv-win64/libdvdread-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libdvdread*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libdvdread-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true
        
  libepoxy:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git
    - run: |
        pip install meson ninja              
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd /d/a/mpv-win64/mpv-win64/libepoxy-dev; PATH=/d/ucrt64/bin:/c/hostedtoolcache/windows/python/3.9.10/x64/scripts:/usr/bin:/opt/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libepoxy*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libepoxy-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true            

  libogg:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools      
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd /d/a/mpv-win64/mpv-win64/libogg-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libogg*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libogg-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libplacebo:
    needs: [lcms2, libepoxy, vulkan, shaderc, spirv-cross]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git
    - run: |
        pip install meson ninja mako            
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lcms2-dev-2.13.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libepoxy-dev-1.5.9-1-x86_64.pkg.tar.zst        
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vulkan-dev-1.3.206-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/shaderc-dev-2022.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/spirv-cross-dev-2021.01.15-1-x86_64.pkg.tar.zst
        pacman -U /d/a/mpv-win64/mpv-win64/*.zst --noconfirm
        cd /d/a/mpv-win64/mpv-win64/libplacebo-dev; PATH=/d/ucrt64/bin:/c/hostedtoolcache/windows/python/3.9.10/x64/scripts:/usr/bin:/opt/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libplacebo*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libplacebo-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  libvorbis_aotuv:
    needs: [libogg]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools      
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libogg-dev-1.3.5-1-x86_64.pkg.tar.zst
        pacman -U /d/a/mpv-win64/mpv-win64/*.zst --noconfirm
        cd /d/a/mpv-win64/mpv-win64/libvorbis_aotuv-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: libvorbis_aotuv*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: libvorbis_aotuv-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  luajit:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git      
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd /d/a/mpv-win64/mpv-win64/luajit; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg -p PKGBUILD-git
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: latest
        assets: luajit*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Delete Dev
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: luajit*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: luajit/*pkg*.xz
        tag: latest
        overwrite: true
        file_glob: true
    - name: Upload Dev
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: luajit/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  mpv:
    needs: [ffmpeg, luajit, libass, lcms2, libbluray, libdvdnav, libepoxy, libplacebo, spirv-cross]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools yasm git      
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffmpeg-dev-5.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/luajit-dev-2.1.0_beta3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/ffnvcodec-dev-11.1.5.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vapoursynth-dev-57-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/freetype2-dev-2.11.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/fribidi-dev-1.0.11-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/harfbuzz-dev-4.0.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libass-dev-0.15.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/lcms2-dev-2.13.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libbluray-dev-1.3.0-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdcss-dev-1.4.3-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdread-dev-6.1.2-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libdvdnav-dev-6.1.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libepoxy-dev-1.5.9-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/vulkan-dev-1.3.206-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/shaderc-dev-2022.1-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/spirv-cross-dev-2021.01.15-1-x86_64.pkg.tar.zst
        curl -OL https://github.com/${{ github.repository }}/releases/download/dev/libplacebo-dev-4.192.1-1-x86_64.pkg.tar.zst
        pacman -U /d/a/mpv-win64/mpv-win64/*.zst --noconfirm
        cd /d/a/mpv-win64/mpv-win64/mpv; PATH=/d/ucrt64/bin:/c/hostedtoolcache/windows/python/3.9.10/x64:/usr/bin:/opt/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: latest
        assets: mpv*
        fail-if-no-assets: false
        fail-if-no-release: false    
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: mpv/*pkg*.xz
        tag: latest
        overwrite: true
        file_glob: true

  opus:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools      
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
      shell: msys2 {0}
      run: |
        cd /d/a/mpv-win64/mpv-win64/opus-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: opus*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: opus-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  package:
    needs: [mpv]
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel
    - name: Checkout mpv-player/mpv
      uses: actions/checkout@v3
      with:
        repository: "mpv-player/mpv"
        fetch-depth: 0
    - name: Get mpv-player/mpv last version
      id: version
      run: echo "::set-output name=version::$(sh version.sh)"        
    - name: Get mpv-player/mpv last commit SHA
      id: sha
      run: echo "::set-output name=sha::$(git log -n1 --format="%h")"    
    - name: Get current timestamp      
      id: timestamp
      run: echo "::set-output name=date::$(date +%Y-%m-%d)"    
    - name: Setup Packages      
      shell: msys2 {0}
      run: |        
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/ffmpeg-5.0-1-x86_64.pkg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/luajit-2.1.0_beta3-1-x86_64.pkg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/vapoursynth-57-1-x86_64.pkg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/vapoursynth-plugin-core-extra-57-1-x86_64.pkg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/mpv-0.34.1-1-x86_64.pkg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/config-1.0-1-x86_64.pkg.tar.xz
        curl -OL https://github.com/${{ github.repository }}/releases/download/latest/mcfgthread-20220308-1-x86_64.pkg.tar.xz
        pacman -U /d/a/mpv-win64/mpv-win64/*.xz --noconfirm       
    - name: Zip Packages    
      shell: pwsh
      run: | 
        $date = Get-Date -Format "yyyy-MM-dd"
        7z a All-in-One-MPV-git-${date}.7z D:\msys64\opt\bin\*
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: All*.7z
        tag: mpv-${{ steps.version.outputs.version }}
        release_name: ${{ steps.timestamp.outputs.date }}
        body: Bump to mpv-player/mpv@${{ steps.sha.outputs.sha }}
        overwrite: true
        file_glob: true 
  
  shaderc:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools git mingw-w64-x86_64-cmake     
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: |
        cd /d/a/mpv-win64/mpv-win64/shaderc-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: shaderc*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: shaderc-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  spirv-cross:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools mingw-w64-x86_64-cmake      
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: |
        cd /d/a/mpv-win64/mpv-win64/spirv-cross-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: spirv-cross*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: spirv-cross-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  vapoursynth:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools     
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      shell: msys2 {0}
      run: |
        cd /d/a/mpv-win64/mpv-win64/vapoursynth; makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: latest
        assets: vapoursynth*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Delete Dev
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: vapoursynth*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: vapoursynth/*pkg*.xz
        tag: latest
        overwrite: true
        file_glob: true
    - name: Upload Dev
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: vapoursynth/*.zst
        tag: dev
        overwrite: true
        file_glob: true

  vulkan:
    runs-on: windows-2022
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        location: D:\
        install: base-devel autotools mingw-w64-x86_64-cmake      
    - uses: actions/cache@v2
      id: cache
      with:
        path: D:\ucrt64
        key: mcf_20220308_11.2.1_x64-ucrt
    - name: Prepare
      run: git config --global core.autocrlf input
      shell: bash
    - uses: actions/checkout@v3
    - name: Build
      env:
        C_INCLUDE_PATH: /opt/include
        CPLUS_INCLUDE_PATH: /opt/include
        LIBRARY_PATH: /opt/lib
        MSYSTEM: UCRT64
        CMAKE: /mingw64/bin/cmake
      shell: msys2 {0}
      run: |
        cd /d/a/mpv-win64/mpv-win64/vulkan-dev; PATH=/usr/bin:/opt/bin:/d/ucrt64/bin PKG_CONFIG_PATH=/opt/lib/pkgconfig makepkg
    - name: Delete
      uses: eko5624/delete-release-assets@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: dev
        assets: vulkan*
        fail-if-no-assets: false
        fail-if-no-release: false
    - name: Upload
      uses: eko5624/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: vulkan-dev/*.zst
        tag: dev
        overwrite: true
        file_glob: true
